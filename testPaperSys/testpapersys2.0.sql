/*
 Navicat Premium Data Transfer

 Source Server         : local
 Source Server Type    : MySQL
 Source Server Version : 50520
 Source Host           : localhost:3306
 Source Schema         : testpapersys

 Target Server Type    : MySQL
 Target Server Version : 50520
 File Encoding         : 65001
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for course
-- ----------------------------
DROP TABLE IF EXISTS `course`;
CREATE TABLE `course`  (
  `course_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '课程id',
  `course_name` varchar(25) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '课程名',
  `course_describe` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '课程描述',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`course_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '课程' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of course
-- ----------------------------
INSERT INTO `course` VALUES ('86913a596db841dd96', 'Java基础', '本书从java语言自身的特点和学生学习java语言的实际要求出发，通过一个贯穿全书的项目，全面系统地介绍了Java语言程序设计的基础知识、基本语法、编程技巧和Java语言面向对象的特征，以及Java语言在图形界面设计、网络编程、数据库编程等方面的应用。 [2]  通过该项目将java语言编程技术与面向对象程序设计相结合，帮助学生建立面向对象编程的主要原则和思维方法，全面介绍java语言的特点和应用技术，注重实际应用能力的培养。 [3] \n全书共分13章，内容安排合理，实用性很强。第1-3章是对Java语言基本概念、基本特征及面向对象的基本思想的介绍，第4章是贯穿全文项目的分析与设计，第5-10章为异常处理、GUI编程、输入/输出流与文件、网络通信、数据库操作，第10-13章为Applet编程、远程方法调用和Servlet和Jsp的基础知识。 ', '2021-04-15 19:49:48');
INSERT INTO `course` VALUES ('cefe3f09e3a7446683', '软件工程', '软件工程是一门研究用工程化方法构建和维护有效、实用和高质量的软件的学科。它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。', '2021-04-20 10:39:17');
INSERT INTO `course` VALUES ('ec1a249ecad74cf987', 'MySQL', 'MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。\nMySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。\n\n', '2021-04-25 13:03:42');
INSERT INTO `course` VALUES ('3dc577841f984fe492', '测试课程', '委屈二无群二', '2021-05-10 22:56:52');

-- ----------------------------
-- Table structure for knowledge
-- ----------------------------
DROP TABLE IF EXISTS `knowledge`;
CREATE TABLE `knowledge`  (
  `knowledge_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '课程知识点id',
  `knowledge_name` varchar(25) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '知识点名字',
  `knowledge_describe` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '知识点描述',
  `course_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '课程id',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`knowledge_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '知识点' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of knowledge
-- ----------------------------
INSERT INTO `knowledge` VALUES ('0833051f29364a2281', '数据分组（ Group By）', 'SELECT 字段名1，字段名2...[，聚合函数] FROM 表名\nGROUP BY 分组字段名1，分组字段名2...[HAVING 条件表达式]', 'ec1a249ecad74cf987', '2021-04-25 13:27:51');
INSERT INTO `knowledge` VALUES ('1b6995881eef477f99', '限制查询结果的数量(分页)', 'SELECT 字段列表 FROM 表名 LIMIT[偏移量n,(从n开始显示)]显示m行;', 'ec1a249ecad74cf987', '2021-04-25 13:26:40');
INSERT INTO `knowledge` VALUES ('d1d34bc68115498da3', 'Where语句的or和and用法', 'SELECT字段名FROM 数据源 WHERE <条件1>\n\nAND/OR <条件2>[.....AND/OR <条件n>]', 'ec1a249ecad74cf987', '2021-04-25 13:25:58');
INSERT INTO `knowledge` VALUES ('d732a0710e214be396', '模糊查询', '%表示0或多个未知字段 _表示一个未知字段\n\n  SELECT *|[字段1,字段2..]FROM 表名 WHERE 字段名[NOT]LIKE \'匹配字符串\';\n   SELECT 字段列表 FROM 表名 WHERE 字段名 REGEXP \'正则表达式 \';', 'ec1a249ecad74cf987', '2021-04-25 13:24:35');
INSERT INTO `knowledge` VALUES ('d27c033c88af4a2ba8', '剔除重复字段的查询', 'SELECT *DISTINCT*字段名[,字段2] FROM表名;', 'ec1a249ecad74cf987', '2021-04-25 13:23:28');
INSERT INTO `knowledge` VALUES ('4b334fb8009a418f96', '空值字段查询', 'SELECT *|[字段1,字段2..] FROM 表名\n\nWHERE 字段名 IS[NOT]NULL;', 'ec1a249ecad74cf987', '2021-04-25 13:23:16');
INSERT INTO `knowledge` VALUES ('5e19cca529884d03a1', '值1到值2范围之间的数据', 'SELECT *|[字段1,字段2..] FROM 表名 WHERE 字段名 \\[NOT\\] BETWEEN 值1 AND值2;', 'ec1a249ecad74cf987', '2021-04-25 13:22:32');
INSERT INTO `knowledge` VALUES ('909207e6a6a541c59c', '条件特定字段', ' SELECT字段1,字段2 FROM 表名 WHERE(条件语句);', 'ec1a249ecad74cf987', '2021-04-25 13:21:37');
INSERT INTO `knowledge` VALUES ('b159afd91a7a48df83', '带条件的字段', 'SELECT \\*FROM 表名 WHERE (条件语句);', 'ec1a249ecad74cf987', '2021-04-25 13:21:30');
INSERT INTO `knowledge` VALUES ('5ab565d13b914df6bc', '查看特定字段', 'SELECT 字段1,字段2 FROM 表名;', 'ec1a249ecad74cf987', '2021-04-25 13:21:22');
INSERT INTO `knowledge` VALUES ('b67ab4d35daf489187', '查看所有数据', 'SELECT *FROM 表名;', 'ec1a249ecad74cf987', '2021-04-25 13:21:14');
INSERT INTO `knowledge` VALUES ('5d592f2257014e12ae', '删除数据', 'DELETE FROM 表名 [WHERE 条件表达式]', 'ec1a249ecad74cf987', '2021-04-25 13:20:59');
INSERT INTO `knowledge` VALUES ('26b717514e914324b1', '更新数据', 'UPDATE 表名 SET 某字段=值,某字段=值 [WHERE (条件表达式))]', 'ec1a249ecad74cf987', '2021-04-25 13:20:45');
INSERT INTO `knowledge` VALUES ('24977332027c41baa8', '插入数据', 'INSERT INTO 表名 \\[字段一,二...\\]VALUES (值1,2...), (值1,2...);', 'ec1a249ecad74cf987', '2021-04-25 13:20:26');
INSERT INTO `knowledge` VALUES ('01d65ed7e78d46cc93', '自动增长字段', 'AUTO_INCREMENT(int型才能用)', 'ec1a249ecad74cf987', '2021-04-25 13:20:04');
INSERT INTO `knowledge` VALUES ('6b8767fc19d24a12b6', '默认值约束', ' DEFAULT', 'ec1a249ecad74cf987', '2021-04-25 13:19:57');
INSERT INTO `knowledge` VALUES ('ce02d32d25e04095b6', '唯一性约束', 'UNIQUE(主键默认唯一)', 'ec1a249ecad74cf987', '2021-04-25 13:19:51');
INSERT INTO `knowledge` VALUES ('75a0ff8357244f4da5', '非空约束', 'NOT NULL(主键默认非空)', 'ec1a249ecad74cf987', '2021-04-25 13:19:43');
INSERT INTO `knowledge` VALUES ('735464e2ea9e4a6093', '外键约束', 'constraint 外键名 foreign key(外键字段)references 外键表名(外键字段)', 'ec1a249ecad74cf987', '2021-04-25 13:19:36');
INSERT INTO `knowledge` VALUES ('39e1ef3cb0334ecfa7', '多字段约束', 'PRIMARY KEY(字段一,字段二)', 'ec1a249ecad74cf987', '2021-04-25 13:19:25');
INSERT INTO `knowledge` VALUES ('143368eb5aba4be7b4', '主键约束', 'PRIMARY KEY', 'ec1a249ecad74cf987', '2021-04-25 13:19:15');
INSERT INTO `knowledge` VALUES ('07f278d6cf0a40f2b9', '删除表', 'DROP TABLE 表名', 'ec1a249ecad74cf987', '2021-04-25 13:19:09');
INSERT INTO `knowledge` VALUES ('b6a54f3d932b42cfae', '修改字段位置', 'ALTER TABLE表名MODIFY 字段一 数据类型 AFTER 字段二', 'ec1a249ecad74cf987', '2021-04-25 13:19:02');
INSERT INTO `knowledge` VALUES ('f02ecbcbbff349e39c', '删除字段', 'ALTER TABLE 表名DROP 字段名', 'ec1a249ecad74cf987', '2021-04-25 13:18:55');
INSERT INTO `knowledge` VALUES ('ef787fb168884e32b9', '添加字段', 'ALTER TABLE 表名 ADD 新字段名 数据类型', 'ec1a249ecad74cf987', '2021-04-25 13:18:47');
INSERT INTO `knowledge` VALUES ('caa0550e52a041839e', '修改数据类型', 'ALTER TABLE 表名 MODIFY 字段名 新数据类型', 'ec1a249ecad74cf987', '2021-04-25 13:18:40');
INSERT INTO `knowledge` VALUES ('93f7af376d2d453786', '修改字段名', 'ALTER TABLE 表名CHANGE 旧字段名 新字段名 新数据类型', 'ec1a249ecad74cf987', '2021-04-25 13:18:30');
INSERT INTO `knowledge` VALUES ('120363ccab7b45a1ba', '修改表名', 'ALTER TABLE 旧表名 RENAME 新表名', 'ec1a249ecad74cf987', '2021-04-25 13:18:23');
INSERT INTO `knowledge` VALUES ('b480fd778c6b40328f', '查看表数据', 'SELERT * FROM 表名', 'ec1a249ecad74cf987', '2021-04-25 13:17:22');
INSERT INTO `knowledge` VALUES ('cec6b1ec2b3b4ac7a8', '查看表的字段信息', 'DESC 表名', 'ec1a249ecad74cf987', '2021-04-25 13:16:55');
INSERT INTO `knowledge` VALUES ('5bc3e8feba434a4fa3', '查看创表语句', 'SHOW CREATE TABLE 表名', 'ec1a249ecad74cf987', '2021-04-25 13:16:47');
INSERT INTO `knowledge` VALUES ('46b7c1be53d64bcc80', '查看所有表', 'SHOW TABLES', 'ec1a249ecad74cf987', '2021-04-25 13:16:40');
INSERT INTO `knowledge` VALUES ('fd9afe2faf804d32b9', '创建表', ' CREATE TABLE 表名', 'ec1a249ecad74cf987', '2021-04-25 13:16:30');
INSERT INTO `knowledge` VALUES ('08b4319590174678ad', '删除数据库', 'DROP DATABASE 数据库名', 'ec1a249ecad74cf987', '2021-04-25 13:16:22');
INSERT INTO `knowledge` VALUES ('63b103843adf4d2eb9', '查看数据库', 'SHOW DATABASES', 'ec1a249ecad74cf987', '2021-04-25 13:16:11');
INSERT INTO `knowledge` VALUES ('ee82ce5302454632a7', '创建数据库', 'CREATE DATABASE 数据库名', 'ec1a249ecad74cf987', '2021-04-25 13:16:03');
INSERT INTO `knowledge` VALUES ('76c78d3bedde41e097', '将字符集修改成gbk', 'set names gbk;(一次性,重启就会恢复utf8(默认,Java也用uttf8));', 'ec1a249ecad74cf987', '2021-04-25 13:15:27');
INSERT INTO `knowledge` VALUES ('390942390aa942729b', '标识符规则 ', 'a) 可以由字母、数字、下划线、美元符$组成，不能以数字开头 b) 不能是java的关键字和保留字 c) 严格区分大小写，且尽量见名知意 2、变量 \npublic class test{ public static void main(String[] args){ String love=\"imooc\";\n', '86913a596db841dd96', '2021-04-15 19:54:14');
INSERT INTO `knowledge` VALUES ('bb354a7cf5d64c03a1', '变量命名习惯', 'a) 第一个单词的首字母小写，其后单词的首字母大写（骆驼式），myAge\nb) 变量命名时，尽量简短且能清楚的表达变量的作用，见名知意，如stuNamePs: java变量长度没有限制，但是严格区分大小写 \n', '86913a596db841dd96', '2021-04-15 19:54:39');
INSERT INTO `knowledge` VALUES ('92fe96d07fbf448bad', '数据类型', 'a) int：4个字节    b) Double：8个字节 c) Float：4个字节   float变量赋值在数值后添加字母f float he=12.2f;d) Char：2个字节   char变量赋值使用单引号’’ e) Boolean：1个字节  取值只能为：true和falsef) String：引用数据类型', '86913a596db841dd96', '2021-04-15 19:55:26');
INSERT INTO `knowledge` VALUES ('d70f5307646540ad87', 'Java常量的应用', 'Final 数据类型 常量名=值； b) 常量名一般使用大写字符', '86913a596db841dd96', '2021-04-15 19:55:46');
INSERT INTO `knowledge` VALUES ('4acbb627c9ce41b294', '逻辑运算符', '^：异或    有且只有一个为true则返回true', '86913a596db841dd96', '2021-04-15 19:56:02');
INSERT INTO `knowledge` VALUES ('97b102a325b54bfb9f', '条件运算符', '? 正确表达式 :错误表达式', '86913a596db841dd96', '2021-04-15 19:56:16');
INSERT INTO `knowledge` VALUES ('23a1ec2c973f4b12be', '输出换行', 'System.out.println()', '86913a596db841dd96', '2021-04-15 19:56:50');
INSERT INTO `knowledge` VALUES ('06f9a0da902e40b0bc', '数组', 'a) 声明数组： \ni. 数组类型[]数组名； ii. 数组类型 数组名[]； b)分配空间： \ni.数组名=new数据类型【数组长度】 \n', '86913a596db841dd96', '2021-04-15 19:57:13');
INSERT INTO `knowledge` VALUES ('4e56437d15874ff495', 'java中无参无返方法的调用', 'a) 定义：public void show(){}方法名字第一个词小写，之后首字母大写 b) 调用： \ni. 创建类的对象 ii. 对象名.方法名（）； \n', '86913a596db841dd96', '2021-04-15 19:57:35');
INSERT INTO `knowledge` VALUES ('e4dc8c2bf8cf4245b3', 'java中无参有返方法的调用', 'a) Public int show(){    return sum;     }b) 注意： \ni. 如果方法的返回类型为void，则方法中不能使用return返回值 ii. 方法的返回值最多只能有一个，不能返回多个值 iii. \n方法返回值的类型必须兼容 \n', '86913a596db841dd96', '2021-04-15 19:58:07');
INSERT INTO `knowledge` VALUES ('f7a619f299e5490c92', '方法的重载', 'a) 必须是在同一个类中 b) 方法名相同 \nc) 方法参数的个数、顺序或类型不同 d) 与方法的修饰符或返回值没有关系 \n', '86913a596db841dd96', '2021-04-15 19:58:30');
INSERT INTO `knowledge` VALUES ('595481fdddaf4382a2', '随机数方法', '（int）（Math.random()*100） 不需要导包', '86913a596db841dd96', '2021-04-15 19:58:47');
INSERT INTO `knowledge` VALUES ('71abb7c01311487c9c', '类和对象', 'a) 类是模子，确定对象将会拥有的特征（属性）和行为（方法） b) 类是对象的模型，具有相同属性和方法的一组对象的集合 c) 对象： \ni. 属性——对象具有的各种特征 ii. 每个对象的每个属性都有特定值\n', '86913a596db841dd96', '2021-04-15 19:59:33');
INSERT INTO `knowledge` VALUES ('fdd6466447ab48b994', 'int和 Integer有什么区别 ', 'Java提供两种不同的类型：引用类型和原始类型（或内置类型）。Int是java的原始数据类型，Integer是java为int提供的封装类。Java为每个原始类型提供了封装类。 ', '86913a596db841dd96', '2021-04-15 20:03:04');
INSERT INTO `knowledge` VALUES ('cd82e1319c0b487b83', '原始类型封装类', 'boolean Booleanchar Characterbyte Byteshort  Shortint  IntegerlongLongfloat  Floatdouble  Double', '86913a596db841dd96', '2021-04-15 20:03:21');
INSERT INTO `knowledge` VALUES ('f89811e51123439795', 'String和StringBuffer的区别 ', 'JAVA平台提供了两个类：String和StringBuffer，它们可以储存和操作字符串，即包含多个字符的字符数据。这个String类提供了数值不可改变的字符串。而这个StringBuffer类提供的字符串进行修改。当你知道字符数据要改变的时候你就可以使用StringBuffer。典型地，你可以使用StringBuffers来动态构造字符数据。 ', '86913a596db841dd96', '2021-04-15 20:03:40');
INSERT INTO `knowledge` VALUES ('4fc83f3b0a1d4c7f91', '运行时异常与一般异常有何异同？ ', '异常表示程序运行过程中可能出现的非正常状态，运行时异常表示虚拟机的通常操作中可能遇到的异常，是一种常见运行错误。 \njava编译器要求方法必须声明抛出可能发生的非运行时异常，但是并不要求必须声明抛出未被捕获的运行时异常。 \n', '86913a596db841dd96', '2021-04-15 20:03:53');
INSERT INTO `knowledge` VALUES ('d02bac192e0d4129a7', '&和&&的区别', '&是位运算符，表示按位与运算，&&是逻辑运算符，表示逻辑与（and）', '86913a596db841dd96', '2021-04-15 20:04:53');
INSERT INTO `knowledge` VALUES ('c94c1cf2aceb47d38c', 'HashMap和Hashtable的区别。 ', 'HashMap是Hashtable的轻量级实现（非线程安全的实现），他们都完成了Map接口', '86913a596db841dd96', '2021-04-15 20:05:12');
INSERT INTO `knowledge` VALUES ('8bfb561070154e6284', 'sleep()和 wait()有什么区别', 'sleep是线程类（Thread）的方法，导致此线程暂停执行指定时间，给执行机会给其他线程，但是监控状态依然保持，到时后会自动恢复。调用sleep不会释放对象锁。 ', '86913a596db841dd96', '2021-04-15 20:05:33');
INSERT INTO `knowledge` VALUES ('c86e153096114602b9', 'error和exception有什么区别', 'error表示恢复不是不可能但很困难的情况下的一种严重问题。比如说内存溢出。不可能指望程序能处理这样的情况。', '86913a596db841dd96', '2021-04-15 20:05:47');
INSERT INTO `knowledge` VALUES ('0f19101e2a4942a593', 'heap和stack有什么区别', '栈是一种线形集合，其添加和删除元素的操作应在同一段完成。栈按照后进先出的', '86913a596db841dd96', '2021-04-15 20:05:58');
INSERT INTO `knowledge` VALUES ('ecac24895971451a9c', '软件的定义', '软件=程序+数据+文档 \n      程序：按照事先设计的功能和性能要求执行的指令或语句序列       数据：程序能正常操纵信息的数据结构       文档：描述程序操作和使用的文档', 'cefe3f09e3a7446683', '2021-04-20 10:40:03');
INSERT INTO `knowledge` VALUES ('07e2947112bf44b9ad', '软件的特性', '特性： \n（1） 软件是一种逻辑实体，具有抽象性，不是一般的物理实体； \n（2） 软件的成产与硬件存在某些相同点，但有根本上的不同，软件开发是人的智力的高度发挥，而不是传统意\n义上的制造，它更依赖于开发人员的素质，智力，人员和组合，合作和管理； \n（3） 软件维护与硬件维修有着本质的差别，软件维护没有硬件维护那样有可替换的标准零件；', 'cefe3f09e3a7446683', '2021-04-20 10:41:06');
INSERT INTO `knowledge` VALUES ('c6774d1077624d21a4', '什么是软件危机？', '软件危机是指由于落后的软件生产方式无法满足迅速增长的计算机软件应用需求，从而导致软件开发与维\n护过程中出现一系列严重问题的现象。\n', 'cefe3f09e3a7446683', '2021-04-20 10:42:03');
INSERT INTO `knowledge` VALUES ('8d0616d441564dc2ab', '软件危机产生的原因是什么？', '（1） 用户对软件需求的描述不准确、不全面，甚至有错误，以及在开发过程中，不断提出或者修改需求； （2） 用户和开发人员对软件需求的理解存在差异，导致所开发的软件产品和用户需求不一致；\n', 'cefe3f09e3a7446683', '2021-04-20 10:42:29');
INSERT INTO `knowledge` VALUES ('9076665dd3f2466d9f', '什么是软件工程？', '将系统化的、规范的、可度量的方法应用于软件的开发、运行和维护的过程，即将工程化应用于软件中，\n并对方法的研究。\n', 'cefe3f09e3a7446683', '2021-04-20 10:42:47');
INSERT INTO `knowledge` VALUES ('70c91de7e20a49808f', '软件工程的目标', '在给定的成本和进度前提下，开发出具有可修改性、可理解性、可维护性、有效性、可靠性、可适用性、\n可重用性、可移植性、可跟踪性和互操作性并且满足用户需求的软件产品\n', 'cefe3f09e3a7446683', '2021-04-20 10:43:10');
INSERT INTO `knowledge` VALUES ('ec5cd4ac7a474595a3', '软件工程内容是什么？', '主要内容包括软件开发技术和软件工程管理两方面。（P6）     要素：方法，工具，过程', 'cefe3f09e3a7446683', '2021-04-20 10:43:32');
INSERT INTO `knowledge` VALUES ('f660a45ac49d4eb488', '什么是软件生存周期？', '又称为软件开发模型，软件过程模型，它清晰直观地反映了软件开发的全部过程、所涉及的活动和任务结\n构框架，并指出了开发了开发各阶段的关系、开发活动的衔接情况。\n', 'cefe3f09e3a7446683', '2021-04-20 10:43:53');
INSERT INTO `knowledge` VALUES ('698e64ede5b545e6be', '软件生存周期模型有哪些主要模型？', '瀑布模型（waterfallmodel），原型（prototype）模型，螺旋（thespiral）模型，增量（incremental）模\n型，喷泉（fountain）模型，迭代（iterative）模型\n', 'cefe3f09e3a7446683', '2021-04-20 10:44:10');
INSERT INTO `knowledge` VALUES ('0433440b85014c03bd', '简述有哪些主要的软件开发方法？', '结构化方法：也称为生命周期方法或传统方法，由结构化分析（structured analysis）、结构化设计（SD）、结构化编\n程（SP）三部分有机组合而成。其基本思想是自顶向下，逐步求精，基本原则是抽象和分解。 \n    面向对象方法（Object—Oriented Method）：把面向对象的思想应用于软件开发过程中，指导开发活动的系统方法\n', 'cefe3f09e3a7446683', '2021-04-20 10:44:27');
INSERT INTO `knowledge` VALUES ('6b7730085346422c8a', '软件生命期各阶段的任务是什么？', '软件定义：问题定义，系统的可行性研究，需求分析     软件开发：概要设计，详细设计，编码实践，软件测试 \n    软件使用维护和退役：软件发布与实施，软件维护，版本更新或退役 九、简述瀑布模型（P12）、原型模型特点。 \n    瀑布模型：软件开发的各项活动严格按照线性方式进行，各阶段之间具有顺序性和依赖性，且为了保证软件的开\n', 'cefe3f09e3a7446683', '2021-04-20 10:44:45');
INSERT INTO `knowledge` VALUES ('7b2063f528b847e396', '试述软件需求', '指用户对目标软件系统在功能、性能、行为、涉及约束等方面的期望，这种期望可能是原始的、笼统\n的，也可能是抽象的太细节化的。\n', 'cefe3f09e3a7446683', '2021-04-20 10:45:07');
INSERT INTO `knowledge` VALUES ('22735980751b498f86', '试述 需求分析', '通过对应用问题及其环境的分析与理解，采用一系列的分析方法和技术，将用户的需求逐步精确化、\n完全化、一致化，最终形成需求规格说明文档的过程。\n', 'cefe3f09e3a7446683', '2021-04-20 10:45:26');
INSERT INTO `knowledge` VALUES ('4c347b712bd94d1aba', '需求建模概念的含义及区别', '需求建模是为了更好的理解用户所描述的需求所作出的一种抽象，是用符号语言对事务无歧义的书面\n描述。模型主要包括数据模型，功能模型和行为模型。\n', 'cefe3f09e3a7446683', '2021-04-20 10:45:40');
INSERT INTO `knowledge` VALUES ('4a011e6fcb354e9799', '可行性研究的任务是什么？', '用最小的代价在尽可能短的时间内确定该软件项目是否能够开发，是否值得去开发。 三、成本—效益分析可用哪些指标进行度量？（P32）          成本效益分析是衡量经济可行性的。   指标：（1）货币的时间价值。（2）投资回收期（3）纯收入 四、需求分析阶段的基本任务是什么？（P27） \n    任务：深入描述软件的功能和性能，确定软件设计的限制和软件同其他系统元素的接口细节，定义软件的其他有\n效性需求\n', 'cefe3f09e3a7446683', '2021-04-20 10:46:01');
INSERT INTO `knowledge` VALUES ('49f784fb241f47608d', '简述需求分析阶段的过程。', '问题识别     2．分析与综合    3．编制需求分析阶段的文档    4．需求验证', 'cefe3f09e3a7446683', '2021-04-20 10:46:14');
INSERT INTO `knowledge` VALUES ('4389ed8f3bc7415c92', '常用的初步软件需求获取的方法有哪些？', '1．访谈与会议   2．观察用户工作流程    3．建立联合小组            4．其他获取方法：快速原型法，基于本体的需求获取方法 ', 'cefe3f09e3a7446683', '2021-04-20 10:46:38');
INSERT INTO `knowledge` VALUES ('feb5c6d4da6b423a8d', '什么是 当前系统', '可能是需要改进的某个已在计算机运行的数据处理系统，也可能是一个人工的数据处理过程。 ', 'cefe3f09e3a7446683', '2021-04-20 10:47:40');
INSERT INTO `knowledge` VALUES ('a56a38238cef47758c', '当前系统的物理模型与逻辑模型有什么差别？', '物理模型是确定待开发软件系统的系统元素，并将功能和数据结构分配到这些系统元素中，它是软件实现的基础。\n逻辑模型忽视实现机制与细节，只描述系统要完成的功能和要处理的数据。 \n    逻辑模型是在物理模型的基础上去掉一些非本质因素形成的，它反应的是系统的本质\n', 'cefe3f09e3a7446683', '2021-04-20 10:47:57');
INSERT INTO `knowledge` VALUES ('80d9416adefa40a6b4', '什么是软件概要设计？', '设计人员依据软件需求规格说明文档，确定软件的体系结构，建立软件模块间的关系，定义个功能模块的\n接口，设计全局数据库或数据结构，规定设计约束，指定组装测试计划。\n', 'cefe3f09e3a7446683', '2021-04-20 10:48:14');
INSERT INTO `knowledge` VALUES ('9e56248707a9458380', '软件概要设计 的基本任务是什么？', '将软件需求转化为软件的系统结构和数据结构（P49） \n    *力争做到功能模块之间有比较低的耦合度而功能模块内部有较高的内聚度。', 'cefe3f09e3a7446683', '2021-04-20 10:48:36');
INSERT INTO `knowledge` VALUES ('3ade8921796345e69e', '详细设计的基本任务是什么？', '通过对软件结构细化，得到软件的详细的算法和数据结构。（P49）', 'cefe3f09e3a7446683', '2021-04-20 10:48:57');
INSERT INTO `knowledge` VALUES ('e48674e760f44ee783', '基本任务 有哪几种描述方法？', '（过程设计）程序流程图   盒图（N-S图）  问题分析图（PAD图）  判定表和判定树 过程设计语言（PDL）\n', 'cefe3f09e3a7446683', '2021-04-20 10:49:21');
INSERT INTO `knowledge` VALUES ('4523aa8fb5de4c5497', '软件设计的基本原理包括哪些内容？', '抽象与逐步求精、模块化、信息隐蔽、模块独立', 'cefe3f09e3a7446683', '2021-04-20 10:49:35');
INSERT INTO `knowledge` VALUES ('e4621a889faf4a63a1', '衡量模块独立性的两个标准时什么？', '内聚和耦合 ', 'cefe3f09e3a7446683', '2021-04-20 10:49:49');
INSERT INTO `knowledge` VALUES ('f0137215abd84028aa', '内聚和耦合各表示什么含义', '内聚（cohesion）——衡量一个模块内部各个元素彼此结合的紧密程度 \n耦合（coupling）——衡量不同模块之间的相对独立性（互相连接的紧密程度）\n', 'cefe3f09e3a7446683', '2021-04-20 10:50:26');
INSERT INTO `knowledge` VALUES ('962d9977178746f5b0', '模块的耦合性有哪几种？', '非直接耦合——两个模块之间没有直接关系，他们中任何一个都不依赖于另一个而能独立工作', 'cefe3f09e3a7446683', '2021-04-20 10:54:01');
INSERT INTO `knowledge` VALUES ('53d74b274ef24779a3', '什么是数据耦合', '一模块访问另一模块，相互传递的信息已参数形式给出，并且传递的参数完全是简单数据元', 'cefe3f09e3a7446683', '2021-04-20 10:55:55');
INSERT INTO `knowledge` VALUES ('a5a904c02997438ba0', '什么是标记耦合', '—两模块之间都要使用同一数据结构的一部分，不是采用全程公共数据区共享，而是通过模块', 'cefe3f09e3a7446683', '2021-04-20 10:56:09');
INSERT INTO `knowledge` VALUES ('95595ad72eb34a5da8', '什么是控制耦合', '一模块传递给另一模块的参数中包含了控制信息（开关，标记，名字等），该控制信息勇于控', 'cefe3f09e3a7446683', '2021-04-20 10:56:25');
INSERT INTO `knowledge` VALUES ('914a7617058343f499', '什么是外部耦合', '一组模块都访问同一全局简单变量而不是同一全局数据结构，而且不是通过参数表传递该全', 'cefe3f09e3a7446683', '2021-04-20 10:56:39');
INSERT INTO `knowledge` VALUES ('7a12af41132e464bb9', '公共耦合是什么', '一组模块都访问同一个公共数据环境', 'cefe3f09e3a7446683', '2021-04-20 10:56:52');
INSERT INTO `knowledge` VALUES ('b187c32177214bf5af', '什么是内容耦合', '一模块直接访问另一模块的内部数据；一个模块不通过正常入口转到另一模块内部；两个模块有一部分程序代码重迭（只出现在汇编程序中）；一个模块有多个入口。 从上到下耦合性从低到高，独立性从高到底', 'cefe3f09e3a7446683', '2021-04-20 10:57:39');

-- ----------------------------
-- Table structure for question
-- ----------------------------
DROP TABLE IF EXISTS `question`;
CREATE TABLE `question`  (
  `que_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '试题id',
  `que_course_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '所属的课程id',
  `que_bank_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '所属的题库id',
  `que_create_by` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人--跟user_id就名字不一样',
  `knowledge_ids` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '知识点列表---',
  `que_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '试题内容',
  `que_type` char(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '题型,判断题题(bool),简答题(simple)',
  `que_answer` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '参考答案---',
  `que_answer_describe` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '答案解析',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `que_difficulty` bigint(1) NOT NULL COMMENT '题目难度(1-10)',
  PRIMARY KEY (`que_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '题目[]' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of question
-- ----------------------------
INSERT INTO `question` VALUES ('1ccb6e67923f4699b1', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '4e56437d15874ff495', 'Java语言有三种技术平台，分别是JavaSE、JavaME、JavaEE（） ', 'bool', '正确【√】', 'Java语言有三种技术平台，分别是JavaSE、JavaME、JavaEE（T） ', '2021-04-18 11:33:11', 4);
INSERT INTO `question` VALUES ('9ef44c421bd94cfcb4', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92', 'Java是一门高级计算机语言。（）', 'bool', '正确【√】', 'Java是一门高级计算机语言。（T）', '2021-04-18 11:33:42', 6);
INSERT INTO `question` VALUES ('3a8a34afb9924aa1ac', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '8bfb561070154e6284', 'Java语言具体跨平台的特性（）', 'bool', '正确【√】', 'Java语言具体跨平台的特性（T）', '2021-04-18 11:34:52', 6);
INSERT INTO `question` VALUES ('a2c92d2e19744c5a92', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '0f19101e2a4942a593', 'JDK工具中自带了一个JRE工具（）', 'bool', '正确【√】', 'JDK工具中自带了一个JRE工具（T）', '2021-04-18 11:35:32', 3);
INSERT INTO `question` VALUES ('9abdaefa99ec4bd3a7', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '4fc83f3b0a1d4c7f91', 'JDK安装的时候不可以修改安装目录（）', 'bool', '错误【×】', 'JDK安装的时候不可以修改安装目录（F）', '2021-04-18 11:36:24', 5);
INSERT INTO `question` VALUES ('94c8db713b794275b7', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', 'c86e153096114602b9', 'JDK的安装目录中，只包含bin和lib两个目录。（）', 'bool', '错误【×】', 'JDK的安装目录中，只包含bin和lib两个目录。（F）', '2021-04-18 11:36:57', 6);
INSERT INTO `question` VALUES ('b8677b46d6f8499299', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '4e56437d15874ff495', 'javac命令可以运行Demo.class文件（） ', 'bool', '错误【×】', 'javac命令可以运行Demo.class文件（F） ', '2021-04-18 11:37:30', 8);
INSERT INTO `question` VALUES ('417177bc91db48e4a5', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '71abb7c01311487c9c', '在任意命令行窗口中执行javac命令，如果都能正常地显示帮助信息，说明系统path环境变量配置成功。（）', 'bool', '正确【√】', '在任意命令行窗口中执行javac命令，如果都能正常地显示帮助信息，说明系统path环境变量配置成功。（T）', '2021-04-18 11:38:02', 6);
INSERT INTO `question` VALUES ('dfd54258fcc045e69c', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', 'fdd6466447ab48b994', 'JDK安装成功后，可以将bin目录的路径配置在环境变量path中。（） ', 'bool', '正确【√】', 'JDK安装成功后，可以将bin目录的路径配置在环境变量path中。（T） ', '2021-04-18 11:38:24', 6);
INSERT INTO `question` VALUES ('1365782fcb3440518f', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '71abb7c01311487c9c', 'JDK5以后可以不用配置classpath环境变量。（） ', 'bool', '正确【√】', 'JDK5以后可以不用配置classpath环境变量。（T） ', '2021-04-18 11:39:04', 5);
INSERT INTO `question` VALUES ('21210ce228fd41f99d', '86913a596db841dd96', 'fe420a4ab25d4d468a', '28c1921febad406cbf', '4fc83f3b0a1d4c7f91', '配置classpath环境变量时，路径后面加分号与不加分号是一样的。（） ', 'bool', '错误【×】', '配置classpath环境变量时，路径后面加分号与不加分号是一样的。（F） ', '2021-04-18 11:40:24', 3);
INSERT INTO `question` VALUES ('0a39fee92e82436f82', '86913a596db841dd96', 'fe420a4ab25d4d468a', '28c1921febad406cbf', '390942390aa942729b', 'main()函数是java程序的执行入口。（T） 13、数组的遍历是指依次访问数组中的每个元素（）', 'bool', '正确【√】', 'main()函数是java程序的执行入口。（T） 13、数组的遍历是指依次访问数组中的每个元素（T）', '2021-04-18 11:40:54', 7);
INSERT INTO `question` VALUES ('baf1de2133f44408b7', '86913a596db841dd96', 'fe420a4ab25d4d468a', '28c1921febad406cbf', '23a1ec2c973f4b12be', 'continue语句只用于循环语句中，它的作用是跳出循环。（） ', 'bool', '正确【√】', 'continue语句只用于循环语句中，它的作用是跳出循环。（F） ', '2021-04-18 11:41:24', 6);
INSERT INTO `question` VALUES ('9d25288004bf443890', '86913a596db841dd96', 'fe420a4ab25d4d468a', '28c1921febad406cbf', 'd02bac192e0d4129a7', 'continue语句用在循环语句中，它的作用是终止本次循环，执行下一次循环（）', 'bool', '正确【√】', 'continue语句用在循环语句中，它的作用是终止本次循环，执行下一次循环（T）', '2021-04-18 11:42:14', 4);
INSERT INTO `question` VALUES ('d0b6fb43b9944366a5', '86913a596db841dd96', 'fe420a4ab25d4d468a', '28c1921febad406cbf', 'c94c1cf2aceb47d38c,c86e153096114602b9', '数组的排序算法只有冒泡排序这一种（）', 'bool', '错误【×】', '数组的排序算法只有冒泡排序这一种（F）', '2021-04-18 11:42:46', 6);
INSERT INTO `question` VALUES ('17b80c7601de43d98e', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', '4fc83f3b0a1d4c7f91', '方法的返回值类型可以定义也可以不定义（） ', 'bool', '错误【×】', '方法的返回值类型可以定义也可以不定义（F） ', '2021-04-19 11:50:48', 10);
INSERT INTO `question` VALUES ('d6c60a561f704e6abf', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', 'e4dc8c2bf8cf4245b3', '比较运算符用于对两个数值或变量进行比较，其结果是一个布尔值（）', 'bool', '正确【√】', '比较运算符用于对两个数值或变量进行比较，其结果是一个布尔值（T）', '2021-04-19 11:53:54', 4);
INSERT INTO `question` VALUES ('c1c926d4371a43c0ab', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '595481fdddaf4382a2', '若x = 5，则表达式(x + 5)/3的值是3（）', 'bool', '正确【√】', '若x = 5，则表达式(x + 5)/3的值是3（T）', '2021-04-19 11:55:51', 3);
INSERT INTO `question` VALUES ('4de4e0cc5583445491', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'f89811e51123439795', '标识符可以为关键字（） ', 'bool', '错误【×】', '标识符可以为关键字（F） ', '2021-04-19 11:56:36', 6);
INSERT INTO `question` VALUES ('da9001ea14b64a6380', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'f89811e51123439795', '-5%3的运算结果是2（） ', 'bool', '错误【×】', '-5%3的运算结果是2（F） ', '2021-04-19 11:57:02', 6);
INSERT INTO `question` VALUES ('fc204b8736834a84ba', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'c94c1cf2aceb47d38c', '0xC5表示的是一个十六进制整数。（）', 'bool', '正确【√】', '0xC5表示的是一个十六进制整数。（T）', '2021-04-19 11:57:30', 6);
INSERT INTO `question` VALUES ('2c0b744a886f4f02b2', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'c86e153096114602b9', '在Java中判断方法重载的条件除了参数外，还可以通过返回值类型判断（）', 'bool', '错误【×】', '在Java中判断方法重载的条件除了参数外，还可以通过返回值类型判断（F）', '2021-04-19 11:58:01', 7);
INSERT INTO `question` VALUES ('e7217b6a4c0b45dfa8', '86913a596db841dd96', '820c9f24a318469e9a', '24038b48182349fa8d', 'd02bac192e0d4129a7', '方法递归次数过多会导致内存溢出（）', 'bool', '正确【√】', '方法递归次数过多会导致内存溢出（T）', '2021-04-19 11:58:33', 8);
INSERT INTO `question` VALUES ('042c345ace624b598d', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '97b102a325b54bfb9f', '在Java中，小数会被默认是double类型的值（）', 'bool', '正确【√】', '在Java中，小数会被默认是double类型的值（T）', '2021-04-19 11:59:27', 4);
INSERT INTO `question` VALUES ('cbae13be170a45a08d', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '595481fdddaf4382a2', '在进行赋值运算时，将运算符右边的值赋给左边的变量（）', 'bool', '正确【√】', '在进行赋值运算时，将运算符右边的值赋给左边的变量（T）', '2021-04-19 12:00:16', 6);
INSERT INTO `question` VALUES ('f5985d5bfbf7400ca6', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '8bfb561070154e6284', 'Java中有一种特殊的赋值运算叫做三元运算，它和if-else语句类似（）', 'bool', '正确【√】', 'Java中有一种特殊的赋值运算叫做三元运算，它和if-else语句类似（T）', '2021-04-19 12:00:42', 7);
INSERT INTO `question` VALUES ('749fc86ae3524f808e', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'e4dc8c2bf8cf4245b3', '方法内部类是指在成员方法中定义的类，它只能在当前方法中被使用。（）', 'bool', '正确【√】', '方法内部类是指在成员方法中定义的类，它只能在当前方法中被使用。（T）', '2021-04-19 12:01:31', 7);
INSERT INTO `question` VALUES ('094f267948954d728a', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'cd82e1319c0b487b83', '一个类中如果没有定义构造方法，那么这个类就没有构造方法。（）', 'bool', '错误【×】', '一个类中如果没有定义构造方法，那么这个类就没有构造方法。（F）', '2021-04-19 12:01:54', 4);
INSERT INTO `question` VALUES ('f0685942f8ec4322b3', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'f7a619f299e5490c92', '封装就是隐藏对象的属性和实现细节，仅对外提供公有的方法。（）', 'bool', '正确【√】', '封装就是隐藏对象的属性和实现细节，仅对外提供公有的方法。（T）', '2021-04-19 12:02:36', 7);
INSERT INTO `question` VALUES ('37cb0aa01e324ba483', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'fdd6466447ab48b994', 'Java程序中，可以使用关键字new创建新的对象。（）', 'bool', '正确【√】', 'Java程序中，可以使用关键字new创建新的对象。（T）', '2021-04-19 12:03:03', 5);
INSERT INTO `question` VALUES ('42153a6e63d04aaf9c', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '4fc83f3b0a1d4c7f91', '类和对象的关系？', 'simple', '类定义了一种新的数据类型，可以用新类型来创建该类型的对象。 类（class）是对象（object）的模板，而对象是类的一个实例。', '类定义了一种新的数据类型，可以用新类型来创建该类型的对象。 类（class）是对象（object）的模板，而对象是类的一个实例。', '2021-04-19 12:07:43', 6);
INSERT INTO `question` VALUES ('47da3507ad52406083', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', 'd02bac192e0d4129a7,8bfb561070154e6284', '定义一个类需要包含什么元素？', 'simple', '一个类包含属性和方法。该类具有哪些特征使用属性表示，该类具有哪些行为使用方法来表示。', '一个类包含属性和方法。该类具有哪些特征使用属性表示，该类具有哪些行为使用方法来表示。', '2021-04-19 12:10:13', 6);
INSERT INTO `question` VALUES ('17c2c0beefba40b8b9', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', 'cd82e1319c0b487b83,c86e153096114602b9', '如何使用this关键字？', 'simple', 'This指向自己的引用，即当前方法所在的对象。 它的一个主要作用是要将自己这个对象当做参数，传送给别的对象中的犯法。或者在类定义时使用this来引用自己的属性或方法。', 'This指向自己的引用，即当前方法所在的对象。 它的一个主要作用是要将自己这个对象当做参数，传送给别的对象中的犯法。或者在类定义时使用this来引用自己的属性或方法。', '2021-04-19 12:10:47', 7);
INSERT INTO `question` VALUES ('44e6cbf1cee94b24bf', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', 'c94c1cf2aceb47d38c,0f19101e2a4942a593', '类体中的方法包含哪些分类？ ', 'simple', ' 按返回值分：有返回值、无返回值 \n按参数分：无参数、有参数（单个参数，多个参数） 按范围或功能分：实例方法、类方法、构造方法   \n', ' 按返回值分：有返回值、无返回值 \n按参数分：无参数、有参数（单个参数，多个参数） 按范围或功能分：实例方法、类方法、构造方法   \n', '2021-04-19 12:11:15', 6);
INSERT INTO `question` VALUES ('b6c2fd3c8b0044c190', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '97b102a325b54bfb9f,e4dc8c2bf8cf4245b3', '什么时候为类中的实例变量分配内存空间？', 'simple', '在使用类创建实例对象时会为其分配空间。（通过new关键字和构造函数为其实例化的时候）', '在使用类创建实例对象时会为其分配空间。（通过new关键字和构造函数为其实例化的时候）', '2021-04-19 12:11:42', 7);
INSERT INTO `question` VALUES ('c6e8e77e84c6499a8b', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', 'fdd6466447ab48b994,f89811e51123439795,d02bac192e0d4129a7', ' 什么叫方法的重载？构造方法可以重载吗？', 'simple', '一个类中可以有多个方法具有相同的名称，但这些犯法的参数必须不同，即或者是参数个数不同，或者是参数的类型不同，或者是参数的顺序不同。 \n构造方法可以重载，而且构造方法的重载是方法中使用频率最高的一种。 \n', '一个类中可以有多个方法具有相同的名称，但这些犯法的参数必须不同，即或者是参数个数不同，或者是参数的类型不同，或者是参数的顺序不同。 \n构造方法可以重载，而且构造方法的重载是方法中使用频率最高的一种。  \n', '2021-04-19 12:12:44', 6);
INSERT INTO `question` VALUES ('0d5fed37a4f84aa4a5', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '4e56437d15874ff495,cd82e1319c0b487b83', '简述类变量和实例变量的不同？ ', 'simple', '（1）不同对象的实例变量将分配不同的内存空间，实例变量则属性独有，改变某一个对象的值不影响其他对象；而所有对象的类变量占用同一块内存空间，类变量是所有对象共有的，改变其中一个对象的值，其他对象得到的就是改变后的结果。  （2）类变量在类被加载到内存是就为其分配内存空间，而实例变量在使用new创建对象时，才为其分配内存空间； \n （3） 类变量可以通过对象和类名访问，而实例变量只能通过对象访问。  （4）类变量通过static关键字修饰，实例变量不需要。 \n \n', '（1）不同对象的实例变量将分配不同的内存空间，实例变量则属性独有，改变某一个对象的值不影响其他对象；而所有对象的类变量占用同一块内存空间，类变量是所有对象共有的，改变其中一个对象的值，其他对象得到的就是改变后的结果。  （2）类变量在类被加载到内存是就为其分配内存空间，而实例变量在使用new创建对象时，才为其分配内存空间； \n （3） 类变量可以通过对象和类名访问，而实例变量只能通过对象访问。  （4）类变量通过static关键字修饰，实例变量不需要。 \n \n', '2021-04-19 12:13:48', 8);
INSERT INTO `question` VALUES ('5fe33e08fc5f446f8f', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '97b102a325b54bfb9f,f7a619f299e5490c92,f89811e51123439795', '通过Student stu;语句定义一个用户类型变量时，是否能在内存中创建对象？ ', 'simple', '通过Student stu；语句仅仅声明了一个类型为Student，名称为stu的引用变量。这\n个引用变量具有指向一个Student对象的潜在可能，但还没有指向一个Student对象。如果要想使stu指向一个全新的Student对象，在运行时用特定的java关键字new在JVM存储空间中分配Student对象。即通过赋值语句将引用变量和对象关联起来， \nStudent stu=new Student（）。     \n如何创建一个对象？ \n \n声明该类型的变量，创建该类型的对象，并将对象的引用赋给变量 \nPeople p=new People（）；\n', '通过Student stu；语句仅仅声明了一个类型为Student，名称为stu的引用变量。这\n个引用变量具有指向一个Student对象的潜在可能，但还没有指向一个Student对象。如果要想使stu指向一个全新的Student对象，在运行时用特定的java关键字new在JVM存储空间中分配Student对象。即通过赋值语句将引用变量和对象关联起来， \nStudent stu=new Student（）。     \n如何创建一个对象？ \n \n声明该类型的变量，创建该类型的对象，并将对象的引用赋给变量 \nPeople p=new People（）；\n', '2021-04-19 12:15:15', 8);
INSERT INTO `question` VALUES ('00b6bfbd821d480395', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '23a1ec2c973f4b12be,e4dc8c2bf8cf4245b3,f89811e51123439795', '类变量与实例变量的区别？', 'simple', '类变量在类加载是分配内存的；实例变量在创建对象时分配内存的；类变量在程序退出时释放内存；对象不存在实例变量就不存在了。 \n类变量被所有对象共享，即同一类的所有对象共享此类的类变量，实例变量为每个对象独有；操作自己的实例变量而不会影响其他对象 \n类变量一般通过类名来调用。 \n', '类变量在类加载是分配内存的；实例变量在创建对象时分配内存的；类变量在程序退出时释放内存；对象不存在实例变量就不存在了。 \n类变量被所有对象共享，即同一类的所有对象共享此类的类变量，实例变量为每个对象独有；操作自己的实例变量而不会影响其他对象 \n类变量一般通过类名来调用。 \n', '2021-04-19 12:16:18', 7);
INSERT INTO `question` VALUES ('3886780894404315b9', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '97b102a325b54bfb9f,71abb7c01311487c9c,d02bac192e0d4129a7', '类方法与实例方法的区别？', 'simple', '类加载时，类方法被分配入口地址；实例方法是在第一个对象创建时被分配入口地址 \n类方法一般通过类名来调用 \n在类方法中不能使用this关键字；应为this代表当前对象；类方法是在类加载时就存在而此时对象还不存在。\n', '类加载时，类方法被分配入口地址；实例方法是在第一个对象创建时被分配入口地址 \n类方法一般通过类名来调用 \n在类方法中不能使用this关键字；应为this代表当前对象；类方法是在类加载时就存在而此时对象还不存在。\n', '2021-04-19 12:16:42', 8);
INSERT INTO `question` VALUES ('3634419e69724be49c', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '24038b48182349fa8d', '4e56437d15874ff495,f89811e51123439795,0f19101e2a4942a593', '构造函数的作用和特点', 'simple', '作用：在创建对象时，对新构造出来的对象进行初始化。 特点： \n1) 构造函数的方法名与类同名； \n2) 构造函数是对象在实例化是由系统自动调用； \n3) 构造函数没有返回类型，并且也不用void关键字修饰； \n4) 如果在定义类时没有定义构造函数，则编译器会自动插入一个无参且方\n法体为空的构造函数； \n5) 如果在定义类时显式地定义了一个有参构造函数，则编译器不再提供无\n参的默认构造函数。 \n6) 构造函数的重载是方法重载中最为频繁的一种方式。\n', '作用：在创建对象时，对新构造出来的对象进行初始化。 特点： \n1) 构造函数的方法名与类同名； \n2) 构造函数是对象在实例化是由系统自动调用； \n3) 构造函数没有返回类型，并且也不用void关键字修饰； \n4) 如果在定义类时没有定义构造函数，则编译器会自动插入一个无参且方\n法体为空的构造函数； \n5) 如果在定义类时显式地定义了一个有参构造函数，则编译器不再提供无\n参的默认构造函数。 \n6) 构造函数的重载是方法重载中最为频繁的一种方式。\n', '2021-04-19 12:17:11', 6);
INSERT INTO `question` VALUES ('f9159e8ca88a4a5d9f', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '05ad6e1c-b8de-4', '06f9a0da902e40b0bc,71abb7c01311487c9c', '访问控制里面四个关键字是什么？简要说四者的访问权限关系？', 'simple', 'Public： 任何其他类，对象只要可以看到这个类的话，那么它就可以存取变量的数据或 使用方法 \nProtected：  同一类，同一包可以使用。不同包的类要使用，必须是该类的子类。 Private ：   不允许任何其他类存取和调用 Friendly（default，前边没有修饰符的情况）：  在同一程序包中出现才可以直接使用它的数据和方法  \n', 'Public： 任何其他类，对象只要可以看到这个类的话，那么它就可以存取变量的数据或 使用方法 \nProtected：  同一类，同一包可以使用。不同包的类要使用，必须是该类的子类。 Private ：   不允许任何其他类存取和调用 Friendly（default，前边没有修饰符的情况）：  在同一程序包中出现才可以直接使用它的数据和方法  \n', '2021-04-19 12:20:06', 8);
INSERT INTO `question` VALUES ('9137a4110d4440cdbf', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '05ad6e1c-b8de-4', 'f7a619f299e5490c92,fdd6466447ab48b994,4fc83f3b0a1d4c7f91', '封装的好处是什么？', 'simple', '封装有助于提高程序的灵活性，便于代码的维护和修改，们可以有效地避免修改代码而造成“牵一发而动全身”的问题。而且，杂成员变量被访问的同时还可以避免错误，提高程序的健壮性。  \n在代码发生变化时可以通过修改访问方法，使得修改不影响外界的访问。通过隐藏设计细节，可以把对代码修改造成的负面影响缩小到最小的范围内，这样就可以写出可维护性和可扩展性高的代码 \n', '封装有助于提高程序的灵活性，便于代码的维护和修改，们可以有效地避免修改代码而造成“牵一发而动全身”的问题。而且，杂成员变量被访问的同时还可以避免错误，提高程序的健壮性。  \n在代码发生变化时可以通过修改访问方法，使得修改不影响外界的访问。通过隐藏设计细节，可以把对代码修改造成的负面影响缩小到最小的范围内，这样就可以写出可维护性和可扩展性高的代码 \n', '2021-04-19 12:22:13', 6);
INSERT INTO `question` VALUES ('9b51a49170ac48f8b1', '86913a596db841dd96', 'e593b8e86bdd4c6e85', '05ad6e1c-b8de-4', '595481fdddaf4382a2,cd82e1319c0b487b83,d02bac192e0d4129a7', '什么是继承?', 'simple', '继承性是面向对象程序设计语言的另一种基本特征，通过继承可以实现代码的重用。继承而得到的类为子类，被继承的类为父类，父类包括所有直接或间接被继承的类。 \n子类可继承父类中的变量及方法，也可定义其自身特有的变量及方法。 Java中不支持多重继承。\n', '继承性是面向对象程序设计语言的另一种基本特征，通过继承可以实现代码的重用。继承而得到的类为子类，被继承的类为父类，父类包括所有直接或间接被继承的类。 \n子类可继承父类中的变量及方法，也可定义其自身特有的变量及方法。 Java中不支持多重继承。\n', '2021-04-19 12:22:55', 6);
INSERT INTO `question` VALUES ('5611ae0e3a49499591', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', '05ad6e1c-b8de-4', '0433440b85014c03bd,4a011e6fcb354e9799', '软件的开发与运行经常受到硬件的限制和制约。(  )', 'bool', '正确【√】', '软件的开发与运行经常受到硬件的限制和制约。(√)', '2021-04-23 09:58:11', 5);
INSERT INTO `question` VALUES ('603c0ae346fc417891', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '7a12af41132e464bb9', '模块内的高内聚往往意味着模块间的松耦合。(  )', 'bool', '正确【√】', '模块内的高内聚往往意味着模块间的松耦合。(√ )', '2021-04-23 10:02:59', 3);
INSERT INTO `question` VALUES ('91c6c8b34bc54ba68d', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'f0137215abd84028aa', '软件的质量好坏主要由验收人员负责，其他开发人员不必关心。(  )', 'bool', '错误【×】', '软件的质量好坏主要由验收人员负责，其他开发人员不必关心。(X )', '2021-04-23 10:07:28', 6);
INSERT INTO `question` VALUES ('11306060f609416bb0', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '53d74b274ef24779a3', '判定覆盖不一定包含条件覆盖，条件覆盖也不一定包含判定覆盖。(  ) ', 'bool', '正确【√】', '判定覆盖不一定包含条件覆盖，条件覆盖也不一定包含判定覆盖。(√) ', '2021-04-23 10:07:56', 7);
INSERT INTO `question` VALUES ('314ef4a9e6414961a1', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '6b7730085346422c8a', '应该尽量使用机器语言编写代码，提高程序运行效率，而减少高级语言的使用。(  )', 'bool', '错误【×】', '应该尽量使用机器语言编写代码，提高程序运行效率，而减少高级语言的使用。(X)', '2021-04-23 10:09:49', 7);
INSERT INTO `question` VALUES ('a742401492844f0f91', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '914a7617058343f499', 'UML只能应用于软件系统模型的建立。(   ) ', 'bool', '错误【×】', 'UML只能应用于软件系统模型的建立。(X) ', '2021-04-23 10:10:11', 4);
INSERT INTO `question` VALUES ('3dfddb54c4e24af3b0', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '9e56248707a9458380,b187c32177214bf5af', '软件测试的目的是为了无一遗漏的找出所有的错误。(   ) ', 'bool', '错误【×】', '软件测试的目的是为了无一遗漏的找出所有的错误。(X) ', '2021-04-23 10:10:34', 8);
INSERT INTO `question` VALUES ('61054efde2e747fdb7', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '22735980751b498f86', '目前，软件项目的进度安排的两种比较常用的方法是程序评估与审查技术（PERT）和关键路径法（CPM）。（ ）', 'bool', '正确【√】', '目前，软件项目的进度安排的两种比较常用的方法是程序评估与审查技术（PERT）和关键路径法（CPM）。（√）', '2021-04-23 10:11:13', 4);
INSERT INTO `question` VALUES ('8df7a5e950424dde89', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '53d74b274ef24779a3', '一个好的开发人员应具备的素质和能力包括善于与周围人员团结协作，建立良好的人际关系，善于听取别人的意见。（ ）\n', 'bool', '正确【√】', '一个好的开发人员应具备的素质和能力包括善于与周围人员团结协作，建立良好的\n人际关系，善于听取别人的意见。（√）\n', '2021-04-23 10:11:34', 5);
INSERT INTO `question` VALUES ('44c464b5c84a47d2b9', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '4a011e6fcb354e9799', '目前的绝大多数软件都不适合于快速原型技术。（  ）', 'bool', '错误【×】', '目前的绝大多数软件都不适合于快速原型技术。（X）', '2021-04-23 10:12:00', 5);
INSERT INTO `question` VALUES ('d00aef929e0548ee9d', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '95595ad72eb34a5da8', '面向数据的设计方法适用场合是具有明显的层次信息结构的应用如：企事业的信息管理系统；系统软件（如操作系统）等。（ )', 'bool', '正确【√】', '面向数据的设计方法适用场合是具有明显的层次信息结构的应用如：企事业的信息管理系统；系统软件（如操作系统）等。（√', '2021-04-23 10:12:29', 5);
INSERT INTO `question` VALUES ('bb00b19eef454ad28c', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'b187c32177214bf5af', ' 缺乏处理大型软件项目的经验。是产生软件危机的唯一原因。（   ）', 'bool', '错误【×】', ' 缺乏处理大型软件项目的经验。是产生软件危机的唯一原因。（X）', '2021-04-23 10:12:57', 7);
INSERT INTO `question` VALUES ('8842f56d4b9c4cf5b9', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'ecac24895971451a9c', '测试计划、测试用例、出错统计和有关的分析报告一般不用长期保存。（  ）', 'bool', '错误【×】', '测试计划、测试用例、出错统计和有关的分析报告一般不用长期保存。（X）', '2021-04-23 10:13:31', 3);
INSERT INTO `question` VALUES ('9e3d52b7cbb844c0b2', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'ecac24895971451a9c', '软件也会磨损和老化。（  ）', 'bool', '错误【×】', '软件也会磨损和老化。（X）', '2021-04-23 10:13:43', 3);
INSERT INTO `question` VALUES ('6caf9ca46d644d5980', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'c6774d1077624d21a4', '完善性维护是提高或完善软件的性能。（ ）', 'bool', '正确【√】', '完善性维护是提高或完善软件的性能。（√）', '2021-04-23 10:14:01', 3);
INSERT INTO `question` VALUES ('36d5a3c985a241b7b5', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'f0137215abd84028aa', '缺乏有力的方法学的指导和有效的开发工具的支持， 这往往是产生软件危机的原\n因之一。（ ）\n', 'bool', '正确【√】', '缺乏有力的方法学的指导和有效的开发工具的支持， 这往往是产生软件危机的原\n因之一。（√）\n', '2021-04-23 10:14:21', 4);
INSERT INTO `question` VALUES ('b23a296212e2429085', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '7a12af41132e464bb9', '一个好的开发人员应具备的素质和能力不包括具有良好的书面和口头表达能力。（  ）', 'bool', '错误【×】', '一个好的开发人员应具备的素质和能力不包括具有良好的书面和口头表达能力。（X）', '2021-04-23 10:14:40', 5);
INSERT INTO `question` VALUES ('80bda8feb5f943518e', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '70c91de7e20a49808f,698e64ede5b545e6be', ' 在用户需求分析时观察用户手工操作过程不是为了模拟手工操作过程，而是为了获\n取第一手资料，并从中提取出有价值的需求。（ ）\n', 'bool', '正确【√】', ' 在用户需求分析时观察用户手工操作过程不是为了模拟手工操作过程，而是为了获\n取第一手资料，并从中提取出有价值的需求。（√）\n', '2021-04-23 10:15:01', 8);
INSERT INTO `question` VALUES ('8776bd8dde8f47efaf', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '49f784fb241f47608d,4389ed8f3bc7415c92', '快速原型技术适用于软件产品要求大量的用户交互、或产生大量的可视输出、或设\n计一些复杂的算法等场合。（ ）\n', 'bool', '正确【√】', '快速原型技术适用于软件产品要求大量的用户交互、或产生大量的可视输出、或设\n计一些复杂的算法等场合。（√）\n', '2021-04-23 10:15:23', 8);
INSERT INTO `question` VALUES ('656403404c97427eae', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'feb5c6d4da6b423a8d', '流程图也称为程序（框图）是最常用的一种表示法。（ ）', 'bool', '正确【√】', '流程图也称为程序（框图）是最常用的一种表示法。（√）', '2021-04-23 10:16:02', 8);
INSERT INTO `question` VALUES ('19443c7753fd48459c', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'a5a904c02997438ba0', '面向数据设计方法一般都包括下列任务：确定数据结构特征；用顺序、选择和重复三种基本形式表示数据等步骤。（ ）\n', 'bool', '正确【√】', '面向数据设计方法一般都包括下列任务：确定数据结构特征；用顺序、选择和重复\n三种基本形式表示数据等步骤。（√）\n', '2021-04-23 10:16:28', 8);
INSERT INTO `question` VALUES ('0e578ec5d3524297a2', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '95595ad72eb34a5da8', '理想的人机界面应针对具有典型个性的特定的一类用户设计。（√） 24. 数据输入的一般准则中包括尽量（增加）用户输入的动作。（X） 25. 用穷举测试是较现实的测试方法。（X）', 'bool', '错误【×】', '理想的人机界面应针对具有典型个性的特定的一类用户设计。（√） 24. 数据输入的一般准则中包括尽量（增加）用户输入的动作。（X） 25. 用穷举测试是较现实的测试方法。（X）', '2021-04-23 10:16:47', 4);
INSERT INTO `question` VALUES ('3e781d3edb7c4260a1', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '914a7617058343f499', '编码时应尽可能使用全局变量（ ）', 'bool', '错误【×】', '编码时应尽可能使用全局变量（X）', '2021-04-23 10:17:07', 6);
INSERT INTO `question` VALUES ('f707c22e707240799a', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '7a12af41132e464bb9', '重视程序结构的设计，能使程序具有较好的层次结构（ ）', 'bool', '正确【√】', '重视程序结构的设计，能使程序具有较好的层次结构（√）', '2021-04-23 10:17:27', 6);
INSERT INTO `question` VALUES ('b707f5f412424acf83', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'b187c32177214bf5af', '程序中的注解越少越好（ ）。', 'bool', '错误【×】', '程序中的注解越少越好（X）。', '2021-04-23 10:17:45', 4);
INSERT INTO `question` VALUES ('73000c243e22463396', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'ecac24895971451a9c', '文档可用于专业人员和用户之间的通信和交流；软件开发过程的管理； 运行阶段\n的维护。（ ）\n', 'bool', '正确【√】', '文档可用于专业人员和用户之间的通信和交流；软件开发过程的管理； 运行阶段\n的维护。（√）\n', '2021-04-23 10:18:04', 8);
INSERT INTO `question` VALUES ('a9cc2a80e45f4d26b2', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '07e2947112bf44b9ad', ' 软件开发、设计几乎都是从头开始，成本和进度很难估计。（√） 31. 适应性维护是改进软件未来的可维护性和可靠性。（X） 32. 由于软件是逻辑产品，软件质量较容易直接度量。（ ）', 'bool', '错误【×】', ' 软件开发、设计几乎都是从头开始，成本和进度很难估计。（√） 31. 适应性维护是改进软件未来的可维护性和可靠性。（X） 32. 由于软件是逻辑产品，软件质量较容易直接度量。（X）', '2021-04-23 10:20:15', 8);
INSERT INTO `question` VALUES ('9fefe55f2b0b422dbb', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'c6774d1077624d21a4', '按照功能，软部件可划分为系统软件和应用软件两类。（ ）', 'bool', '正确【√】', '按照功能，软部件可划分为系统软件和应用软件两类。（√）', '2021-04-23 10:20:39', 8);
INSERT INTO `question` VALUES ('273791e457a04f539a', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '9076665dd3f2466d9f,80d9416adefa40a6b4', '如果某子功能可以用一段简洁、精确的文字描述清楚，就无需进一步分解，是创建\n用户需求的数据流模型应遵循的规则。（ ）\n', 'bool', '正确【√】', '如果某子功能可以用一段简洁、精确的文字描述清楚，就无需进一步分解，是创建\n用户需求的数据流模型应遵循的规则。（√）\n', '2021-04-23 10:20:55', 4);
INSERT INTO `question` VALUES ('969a40b2d14a4ec1a7', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '70c91de7e20a49808f', '耦合度是对软件结构中模块间关联程度的一种度量。在设计软件时应追求尽可能紧\n密的耦合的系统。（  ）\n', 'bool', '错误【×】', '耦合度是对软件结构中模块间关联程度的一种度量。在设计软件时应追求尽可能紧\n密的耦合的系统。（X）\n', '2021-04-23 10:21:18', 4);
INSERT INTO `question` VALUES ('deb9ea9f1f8749b6a4', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'ec5cd4ac7a474595a3', '在面向对象设计阶段则着重完成“如何做”的问题，也就是着重考虑对象的实现细节。（ ） \n', 'bool', '正确【√】', '在面向对象设计阶段则着重完成“如何做”的问题，也就是着重考虑对象的实现细节。\n（√） \n', '2021-04-23 10:21:51', 4);
INSERT INTO `question` VALUES ('e26c256914d34aa482', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'f660a45ac49d4eb488', '随着软件复杂性的不断提高，软件的维护难度越来越大。（√）', 'bool', '正确【√】', '随着软件复杂性的不断提高，软件的维护难度越来越大。（√）', '2021-04-23 10:22:13', 5);
INSERT INTO `question` VALUES ('ecb735cb9aa942208f', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '80d9416adefa40a6b4', '软件的可维护性差是软件维护工作量和费用激增的直接原因。（ ）', 'bool', '正确【√】', '软件的可维护性差是软件维护工作量和费用激增的直接原因。（√）', '2021-04-23 10:22:31', 5);
INSERT INTO `question` VALUES ('11d113636e594eb5b3', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '9e56248707a9458380', '纠错性维护是改正运行期间发现的潜伏错误。（√ ） ', 'bool', '正确【√】', '纠错性维护是改正运行期间发现的潜伏错误。（√） ', '2021-04-23 10:22:46', 5);
INSERT INTO `question` VALUES ('1d9f699c97f6425e81', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '3ade8921796345e69e', '软件可移植性（portability），是指软件从一个计算机系统或（环境）移植到另\n一个上去的难易程度。（√）\n', 'bool', '正确【√】', '软件可移植性（portability），是指软件从一个计算机系统或（环境）移植到另\n一个上去的难易程度。（√）\n', '2021-04-23 10:23:05', 5);
INSERT INTO `question` VALUES ('7cd8d90d5bf1417889', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'e48674e760f44ee783', '软件复杂性不能反映出软件的可理解性、模块化、简单性等属性。（ ）', 'bool', '错误【×】', '软件复杂性不能反映出软件的可理解性、模块化、简单性等属性。（X）', '2021-04-23 10:23:20', 5);
INSERT INTO `question` VALUES ('f728e65acad348eca8', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '4523aa8fb5de4c5497', '当程序内的分支数和循环数增加时，V（G）值将随之增加，即程序的复杂性增大。（ ）\n', 'bool', '正确【√】', '当程序内的分支数和循环数增加时，V（G）值将随之增加，即程序的复杂性增大。\n（√）\n', '2021-04-23 10:23:44', 5);
INSERT INTO `question` VALUES ('06c37f34f40c4b27ba', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'e4621a889faf4a63a1', '一般来说，设计软件时应尽量使用数据耦合，减少控制耦合，限制外部环境耦合和公共数据耦合，杜绝内容耦合。（）\n', 'bool', '正确【√】', '一般来说，设计软件时应尽量使用数据耦合，减少控制耦合，限制外部环境耦合和\n公共数据耦合，杜绝内容耦合。（√）\n', '2021-04-23 10:24:10', 5);
INSERT INTO `question` VALUES ('fcb8f2adec1f48e5a4', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'f0137215abd84028aa', '编码的依据是详细设计说明书。（ ）', 'bool', '正确【√】', '编码的依据是详细设计说明书。（√）', '2021-04-23 10:24:37', 6);
INSERT INTO `question` VALUES ('0a6d8a8012dd48af90', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '962d9977178746f5b0', '程序文档应该包括代码的功能、代码的完成者等内容。（ ）', 'bool', '正确【√】', '程序文档应该包括代码的功能、代码的完成者等内容。（√）', '2021-04-23 10:24:50', 6);
INSERT INTO `question` VALUES ('ebf144d06a1346cbb4', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '53d74b274ef24779a3', '预防性维护是修改软件，以适应软硬件环境的变化。（  ） ', 'bool', '错误【×】', '预防性维护是修改软件，以适应软硬件环境的变化。（X） ', '2021-04-23 10:25:06', 6);
INSERT INTO `question` VALUES ('cf5c165988bc4c0a99', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'a5a904c02997438ba0', '开发大型软件易产生疏漏和错误，往往是产生软件危机的原因之一。（ ） \n\n', 'bool', '正确【√】', '开发大型软件易产生疏漏和错误，往往是产生软件危机的原因之一。（√） ', '2021-04-23 10:25:34', 6);
INSERT INTO `question` VALUES ('03fade8db21340d580', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '95595ad72eb34a5da8', '据统计，软件维护人员为了分析和理解原软件系统所花费的工作量约占整个维护工\n作量的60%以下。（ ）\n', 'bool', '错误【×】', '据统计，软件维护人员为了分析和理解原软件系统所花费的工作量约占整个维护工\n作量的60%以下。（X）\n', '2021-04-23 10:25:49', 6);
INSERT INTO `question` VALUES ('6d4c783e396e427e87', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '9e56248707a9458380', '最高耦合度是数据耦合。（ ）', 'bool', '错误【×】', '最高耦合度是数据耦合。（X）', '2021-04-23 10:26:11', 6);
INSERT INTO `question` VALUES ('6c12d1ec9b3144008f', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '53d74b274ef24779a3', '人机界面（Human-Computer Interface，简称HCI）又称人-机接口或用户界面。\n（ ）\n', 'bool', '正确【√】', '人机界面（Human-Computer Interface，简称HCI）又称人-机接口或用户界面。\n（√）\n', '2021-04-23 10:26:49', 7);
INSERT INTO `question` VALUES ('f3691b399d7248838c', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '95595ad72eb34a5da8', '在同一用户界面中，所有的菜单选择、命令输入、数据显示和其他功能应采用不同\n的形式和风格。（ ）\n', 'bool', '错误【×】', '在同一用户界面中，所有的菜单选择、命令输入、数据显示和其他功能应采用不同\n的形式和风格。（X）\n', '2021-04-23 10:27:05', 8);
INSERT INTO `question` VALUES ('302a1f2cfdb24db790', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', '95595ad72eb34a5da8,7a12af41132e464bb9,b187c32177214bf5af', '判定覆盖必然满足语句覆盖。（ ）\n', 'bool', '正确【√】', '判定覆盖必然满足语句覆盖。（√）', '2021-04-23 10:27:21', 9);
INSERT INTO `question` VALUES ('9be8c41e2ec44ed1a3', 'cefe3f09e3a7446683', 'd3d29b7bb68e474a95', 'ef3297d46c7d47eaa9', 'ecac24895971451a9c', '为提高可交互性一般对大多数操作动作应允许用户恢复。同时应尽量减少用户记忆\n的信息量。（ ）\n', 'bool', '正确【√】', '为提高可交互性一般对大多数操作动作应允许用户恢复。同时应尽量减少用户记忆\n的信息量。（√）\n', '2021-04-23 10:27:46', 1);
INSERT INTO `question` VALUES ('400c7be8a64746718f', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', 'c6774d1077624d21a4,8d0616d441564dc2ab', '软件开发中有哪几种过程模型?哪些适用于面向对象的软件开发?', 'simple', '软件开发中常见的软件过程模型有瀑布模型、原型模型、螺旋模型、喷泉模型、统一软件过程等。 其中喷泉模型、统一软件过程适用于面向对象的软件开发。', '暂无解析', '2021-04-23 12:12:07', 7);
INSERT INTO `question` VALUES ('925233ca92154cab99', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '9076665dd3f2466d9f,70c91de7e20a49808f', '什么是结构分析方法?该方法使用什么描述工具?', 'simple', '结构化分析：简称SA，面向数据流进行数据分析的方法。采用自顶向下逐层分解的分析策略。顶层抽象地描述整个系统，底层具体地画出系统工程的每个细节。中间层则是从抽象到具体的过渡。使用数据流图，数据字典，作为描述工具，使用结构化语言，判定表，判定树描述加工逻辑。', '暂无解析', '2021-04-23 12:12:28', 9);
INSERT INTO `question` VALUES ('b2a4121a0f054d0aac', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', 'ec5cd4ac7a474595a3,f660a45ac49d4eb488', '什么是软件概要设计?该阶段的基本任务是什么?', 'simple', '把一个软件需求转换为软件表示时，首先设计出软件总的体系结构。称为概要设计或结构设计。 \n基本任务： \n⑴设计软件系统结构 \n⑵进行数据结构及数据库的设计 ⑶编写概要设计的文档 ⑷评审\n', '暂无解析', '2021-04-23 12:12:52', 7);
INSERT INTO `question` VALUES ('645b01487bfb40a4a1', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '698e64ede5b545e6be,0433440b85014c03bd', '软件维护有哪些内容?', 'simple', '（1）校正性维护。在软件交付使用后，一些隐含的错误在某些特定的使用环境下会暴露出来。为了识别和纠正错误，修改软件性能上的缺陷，应进行确定和修改错误的过程，这个过程就称为校正性维护。 \n（2）适应性维护。为了使应用软件适应计算机硬件、软件环境及数据环境的不断发生的变化而修改软件的过程称为适应性维护。 \n（3）完善性维护。为增加软件功能、增强软件性能、提高软件运行效率而进行的维护活动称为完善性维护。 （4）预防性维护。为了提高软件的可维护性和可靠性而对软件进行的修改称为预防性维护。', '暂无解析', '2021-04-23 12:13:22', 8);
INSERT INTO `question` VALUES ('eb89be230dfd4dbf98', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '4a011e6fcb354e9799,4389ed8f3bc7415c92', '软件测试要经过哪些步骤?这些测试与软件开发各阶段之间有什么关系?', 'simple', '软件测试要经过的步骤是：单元测试→集成测试→确认测试→系统测试。 单元测试对源程序中每一个程序单元进行测试，检查各个模块是否正确实现规定的功能，从而发现模块在编码中或算法中的错误。该阶段涉及编码和详细设计文档。 集成测试是为了检查与设计相关的软件体系结构的有关问题，也就是检查概要设计是否合理有效。 \n确认测试主要是检查已实现的软件是否满足需求规格说明书中确定了的各种需求。 \n系统测试是把已确认的软件与其他系统元素(如硬件、其他支持软件、数据、人工等)结合在一起进行测试。以确定软件是否可以支付使用。', '暂无解析', '2021-04-23 12:14:10', 6);
INSERT INTO `question` VALUES ('58e36cf79a954e3f8f', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', 'feb5c6d4da6b423a8d,a56a38238cef47758c', '什么是软件生存周期?它有哪几个活动?', 'simple', '软件生存周期：一个软件从提出开发要求开始直到该软件报废为止的整个时期。 \n包括：可行性分析和项目开发计划，需求分析，概要设计，详细设计，编码，测试，维护。\n', '暂无解析', '2021-04-23 12:14:32', 8);
INSERT INTO `question` VALUES ('083039b72c6d44c9bf', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '80d9416adefa40a6b4,9e56248707a9458380', '衡量模块独立性的两个标准是什么?各表示什么含义?内聚和耦合。', 'simple', '内聚：又称为块内联系，指模块内部各成分之间相互关联的程度，以高内聚为设计目标。 耦合：也称块间联系，模块之间相互联系程度的度量，联系越紧密，耦合性越强，独立性越差，以低耦合为设计目标。', '暂无解析', '2021-04-23 12:14:51', 8);
INSERT INTO `question` VALUES ('dd3c4ae5851e4ce287', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '3ade8921796345e69e,e48674e760f44ee783', '什么是结构分析方法?结构化分析方法通过哪些步骤来实现?', 'simple', '结构化分析：简称SA，面向数据流进行数据分析的方法。采用自顶向下逐层分解的分析策略。顶层抽象地描述整个系统，底层具体地画出系统工程的每个细节。中间层则是从抽象到具体的过渡。 实现的步骤： \n⑵ 解当前系统的工作流程，获得当前系统的物理模型。  ⑵抽象出当前系统的逻辑模型。  ⑶建立目标系统的逻辑模型。  ⑷作进一步补充和优化。\n', '暂无解析', '2021-04-23 12:15:14', 8);
INSERT INTO `question` VALUES ('b8b56e6f8ee74c6bad', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '4523aa8fb5de4c5497,e4621a889faf4a63a1', '什么是需求分析?需求分析阶段的基本任务是什么?', 'simple', '需求分析：开发人员准确地理解用户的要求，进行细致的调查分析，将用户非形式的需求陈述转化为完整的需求定义，再由需求定义转换到相应的需求规格说明的过程。 基本任务： ⑴问题识别 \n⑵分析与综合，导出软件的逻辑模型 ⑶编写文档\n', '暂无解析', '2021-04-23 12:15:34', 8);
INSERT INTO `question` VALUES ('9e36e10e80a846ea97', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', 'f0137215abd84028aa,962d9977178746f5b0', '什么样是”事物流”?什么是”变换流”?', 'simple', '数据流图（DFD）一般可分为”变换流”，”事物流”两种。 “变换流”：由输入﹑输出﹑变换（或称处理）三部分组成，是一顺序结构。 “事物流”：它的某个加工，分离成许多发散的数据流，形成许多加工路径，并且根据输入值选择其中一个路径来执行。（这人加工称为事务处理中心）', '暂无解析', '2021-04-23 12:15:57', 10);
INSERT INTO `question` VALUES ('1facf1e62d244016ac', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '53d74b274ef24779a3', '单元测试有哪些内容?', 'simple', '单元测试主要针对模块的以下五个基本特征进行测试： (1)模块接口 (2)局部数据结构 (3)重要的执行路径 (4)错误处理 (5)边界条件', '暂无解析', '2021-04-23 12:16:26', 4);
INSERT INTO `question` VALUES ('c498854fd48542b8b1', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', 'a5a904c02997438ba0', '什么是软件生存周期模型?', 'simple', '有哪些主要模型?生存周期模型：描述软件开发过程中各种活动如何执行的模型。对软件开发提供强有力的支持，为开发过程中的活动提供统一的政策保证，为参与开发的人员提供帮助和指导，是软件生存周期模型化技术的基础，也是建立软件开发环境的核心。 \n主要有：瀑布模型，增量模型，螺旋模型，喷泉模型，基于知识的模型，变换模型。\n', '暂无解析', '2021-04-23 12:16:45', 6);
INSERT INTO `question` VALUES ('134cba67d4fd473b81', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '95595ad72eb34a5da8', '软件设计的基本原理包括哪些内容?', 'simple', '⑴模块化：模块是软件的组成部分，是具有独立功能且可命名的一段程序，所有模块组成整体，可以满足问题的要求。 \n⑵抽象：认识复杂现象过程所使用权的工具，只考虑事物本质的共同特性，忽略细节和其它因素。通过抽象确定组成软件的过程实体。  \n⑶信息隐蔽：将模块实现自身功能的细节与数据”隐蔽”起来。模块间仅交换为完成系统功能所必须的信息。 \n⑷模块独立性：每个模块只完成系统要求的独立的子功能。', '暂无解析', '2021-04-23 12:17:06', 7);
INSERT INTO `question` VALUES ('e108b5e64cb745adb1', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '914a7617058343f499,7a12af41132e464bb9', '结构化程序设计的基本要点是什么?', 'simple', '(1)采用自顶向下、逐步求精的程序设计方法 \n(2)使用三种基本控制结构构造程序。任何程序都可以由顺序、选择、重复(循环)三种基本控制结构构造，这三种基本结构的共同点是单入口、单出口。 (3)主程序员组的组织形式。\n', '暂无解析', '2021-04-23 12:17:26', 8);
INSERT INTO `question` VALUES ('514710ad6ca74e5bae', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', 'b187c32177214bf5af', '详细设计有哪几种描述方法?', 'simple', '详细设计的描述方法有图形、表格和语言，其中图形常用结构化程序流程图、盒图和PAD(问题分析图)为描述工具，语言常用过程设计语言(PDL)来作为工具。', '暂无解析', '2021-04-23 12:17:58', 4);
INSERT INTO `question` VALUES ('5d2fede135cb4e329f', 'cefe3f09e3a7446683', 'ca978a28ef0c41fcac', '05ad6e1c-b8de-4', '0433440b85014c03bd', '什么是软件配置管理?', 'simple', '什么是基线?软件配置管理，简称SCM(Software Configuration Management),是指一组管理整个软件生存期各阶段中变更的活动。软件配置管理技术可以使软件变更所产生的错误达到最小并最有效地提高生产率。 基线：是软件生存期中各开发阶段的一个特定点，它的作用是把开发各阶段工作的划分更加明确化，使本来连续的工作在这些点上断开，以便于检查与肯定阶段成果。', '暂无解析', '2021-04-23 12:18:33', 6);
INSERT INTO `question` VALUES ('3b5f8ede5831441e94', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'f7a619f299e5490c92', 'Java语言有三种技术平台，分别是 JavaSE、JavaME、JavaEE（  ）', 'bool', '正确【√】', 'Java语言有三种技术平台，分别是 JavaS\nE、JavaM\nE、JavaEE（T）', '2021-04-25 12:53:13', 6);
INSERT INTO `question` VALUES ('85304d7b74054cffb3', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '595481fdddaf4382a2', 'Java是一门高级计算机语言。（  \n ）', 'bool', '正确【√】', 'Java是一门高级计算机语言。（ T）', '2021-04-25 12:53:26', 6);
INSERT INTO `question` VALUES ('a24bb294ebaf470d98', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '71abb7c01311487c9c', 'Java语言具体跨平台的特性（   ）', 'bool', '正确【√】', 'Java语言具体跨平台的特性（ T）', '2021-04-25 12:53:41', 7);
INSERT INTO `question` VALUES ('8809339c322347adba', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'fdd6466447ab48b994', 'JDK工具中自带了一个 JRE工具（  \n  ）\n', 'bool', '正确【√】', 'JDK工具中自带了一个 JRE工具（ T）\n', '2021-04-25 12:53:58', 7);
INSERT INTO `question` VALUES ('2dffcd6871be4b0796', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'cd82e1319c0b487b83', '、JDK安装的时候不可以修改安装目录（  )', 'bool', '错误【×】', '、JDK安装的时候不可以修改安装目录（ F', '2021-04-25 12:54:19', 8);
INSERT INTO `question` VALUES ('4eedb4d55b184cc583', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'f89811e51123439795', 'JDK的安装目录中，只包含 bin 和 lib 两个目录。（   ）', 'bool', '错误【×】', 'JDK的安装目录中，只包含 bin 和 lib 两个目录。（ F）', '2021-04-25 12:54:33', 9);
INSERT INTO `question` VALUES ('753728cfc86b4f238f', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '4fc83f3b0a1d4c7f91', 'javac命令可以运行 Demo.class文件（   )', 'bool', '错误【×】', 'javac命令可以运行 Demo.class文件（ F', '2021-04-25 12:54:47', 10);
INSERT INTO `question` VALUES ('73822255dad542b7be', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'd02bac192e0d4129a7', '在任意命令行窗口中执行 javac命令，如果都能正常地显示帮助信息，\n说明系统 path 环境变量配置成功。（  ）\n', 'bool', '正确【√】', '在任意命令行窗口中执行 javac命令，如果都能正常地显示帮助信息，\n说明系统 path 环境变量配置成功。（ T）\n', '2021-04-25 12:55:05', 2);
INSERT INTO `question` VALUES ('f042502124ee4063af', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'c94c1cf2aceb47d38c', 'JDK安装成功后，可以将 bin 目录的路径配置在环境变量 path 中。\n（    ）', 'bool', '正确【√】', 'JDK安装成功后，可以将 bin 目录的路径配置在环境变量 path 中。\n（T）', '2021-04-25 12:55:20', 2);
INSERT INTO `question` VALUES ('dce451726d5748f681', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '8bfb561070154e6284', 'JDK5以后可以不用配置 classpath环境变量。（    ）', 'bool', '正确【√】', 'JDK5以后可以不用配置 classpath环境变量。（ T）', '2021-04-25 12:55:40', 3);
INSERT INTO `question` VALUES ('9853b67af50143b6a5', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'c86e153096114602b9,0f19101e2a4942a593', '配置 classpath环境变量时，路径后面加分号与不加分号是一样的。\n（    ）\n', 'bool', '错误【×】', '配置 classpath环境变量时，路径后面加分号与不加分号是一样的。\n（F）\n', '2021-04-25 12:55:57', 4);
INSERT INTO `question` VALUES ('125c88fdf9234804a2', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '390942390aa942729b', 'main()函数是 java 程序的执行入口。（   ）', 'bool', '正确【√】', 'main()函数是 java 程序的执行入口。（ T）', '2021-04-25 12:56:17', 4);
INSERT INTO `question` VALUES ('e78f1de40575448182', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', 'bb354a7cf5d64c03a1', '数组的遍历是指依次访问数组中的每个元素（  ）', 'bool', '正确【√】', '数组的遍历是指依次访问数组中的每个元素（ T）', '2021-04-25 12:56:29', 5);
INSERT INTO `question` VALUES ('0ad2dc6a48d24e7c8c', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '92fe96d07fbf448bad', 'continue 语句只用于循环语句中，它的作用是跳出循环。（  \n  ）\n', 'bool', '错误【×】', 'continue 语句只用于循环语句中，它的作用是跳出循环。（ F）\n', '2021-04-25 12:56:43', 6);
INSERT INTO `question` VALUES ('a13b9ccf60574a3eae', '86913a596db841dd96', 'fe420a4ab25d4d468a', '24038b48182349fa8d', '4acbb627c9ce41b294', 'continue 语句用在循环语句中，它的作用是终止本次循环，执行下一\n次循环（  ）\n', 'bool', '正确【√】', 'continue 语句用在循环语句中，它的作用是终止本次循环，执行下一\n次循环（ T）', '2021-04-25 12:56:57', 6);
INSERT INTO `question` VALUES ('6dc5b0f0ba8d4f568a', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'b67ab4d35daf489187,26b717514e914324b1,6b8767fc19d24a12b6', 'Mysql 的存储引擎,myisam和innodb的区别。', 'simple', '1.MyISAM 是非事务的存储引擎，适合用于频繁查询的应用。表锁，不会出现死锁，适合小数据，小并发。\n\n2.innodb是支持事务的存储引擎，合于插入和更新操作比较多的应用，设计合理的话是行锁（最大区别就在锁的级别上），适合大数据，大并发。', '暂无解析', '2021-04-27 10:57:10', 7);
INSERT INTO `question` VALUES ('d5287bb19d144a01a6', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '5d592f2257014e12ae,24977332027c41baa8,01d65ed7e78d46cc93', '数据表类型有哪些', 'simple', 'MyISAM、InnoDB、HEAP、BOB,ARCHIVE,CSV等。\n       MyISAM：成熟、稳定、易于管理，快速读取。一些功能不支持（事务等），表级锁。\n       InnoDB：支持事务、外键等特性、数据行锁定。空间占用大，不支持全文索引等。', '暂无解析', '2021-04-27 10:57:37', 8);
INSERT INTO `question` VALUES ('b7f2a747cd4b4be3a6', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '26b717514e914324b1,6b8767fc19d24a12b6,ce02d32d25e04095b6', 'MySQL数据库作发布系统的存储，一天五万条以上的增量，预计运维三年,怎么优化？', 'simple', '1. 设计良好的数据库结构，允许部分数据冗余，尽量避免join查询，提高效率。\n2. 选择合适的表字段数据类型和存储引擎，适当的添加索引。\n3. mysql库主从读写分离。\n4. 找规律分表，减少单表中的数据量提高查询速度。\n5。添加缓存机制，比如memcached，apc等。\n6. 不经常改动的页面，生成静态页面。\n7. 书写高效率的SQL。比如 SELECT * FROM TABEL 改为 SELECT field_1, field_2, field_3 FROM TABLE.', '暂无解析', '2021-04-27 10:59:15', 8);
INSERT INTO `question` VALUES ('38b7a8ed64644217b8', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '24977332027c41baa8,01d65ed7e78d46cc93', '对于大流量的网站,您采用什么样的方法来解决各页面访问量统计问题？', 'simple', '1. 确认服务器是否能支撑当前访问量。\n2. 优化数据库访问。\n3. 禁止外部访问链接（盗链）, 比如图片盗链。\n4. 控制文件下载。\n5. 使用不同主机分流。\n6. 使用浏览统计软件，了解访问量，有针对性的进行优化。', '暂无解析', '2021-04-27 11:00:04', 8);
INSERT INTO `question` VALUES ('523b1486bc184aaabc', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '6b8767fc19d24a12b6,ce02d32d25e04095b6', '如何进行SQL优化？', 'simple', '（1）选择正确的存储引擎\n以 MySQL为例，包括有两个存储引擎 MyISAM 和 InnoDB，每个引擎都有利有弊。\nMyISAM 适合于一些需要大量查询的应用，但其对于有大量写操作并不是很好。甚至你只是需要update一个字段，整个表都会被锁起来，而别的进程，就算是读进程都无法操作直到读操作完成。另外，MyISAM 对于 SELECT COUNT(*) 这类的计算是超快无比的。\n\nInnoDB 的趋势会是一个非常复杂的存储引擎，对于一些小的应用，它会比 MyISAM 还慢。但是它支持“行锁” ，于是在写操作比较多的时候，会更优秀。并且，他还支持更多的高级应用，比如：事务。\n\n \n\n（2）优化字段的数据类型\n\n记住一个原则，越小的列会越快。如果一个表只会有几列罢了（比如说字典表，配置表），那么，我们就没有理由使用 INT 来做主键，使用 MEDIUMINT, SMALLINT 或是更小的 TINYINT 会更经济一些。如果你不需要记录时间，使用 DATE 要比 DATETIME 好得多。当然，你也需要留够足够的扩展空间。\n\n \n\n（3）为搜索字段添加索引\n\n索引并不一定就是给主键或是唯一的字段。如果在你的表中，有某个字段你总要会经常用来做搜索，那么最好是为其建立索引，除非你要搜索的字段是大的文本字段，那应该建立全文索引。\n\n \n\n(4)避免使用Select *从数据库里读出越多的数据，那么查询就会变得越慢。并且，如果你的数据库服务器和WEB服务器是两台独立的服务器的话，这还会增加网络传输的负载。即使你要查询数据表的所有字段，也尽量不要用*通配符，善用内置提供的字段排除定义也许能给带来更多的便利。\n\n \n\n(5)使用 ENUM 而不是 VARCHAR\n\nENUM 类型是非常快和紧凑的。在实际上，其保存的是 TINYINT，但其外表上显示为字符串。这样一来，用这个字段来做一些选项列表变得相当的完美。例如，性别、民族、部门和状态之类的这些字段的取值是有限而且固定的，那么，你应该使用 ENUM 而不是 VARCHAR。\n\n \n\n(6)尽可能的使用 NOT NULL\n\n除非你有一个很特别的原因去使用 NULL 值，你应该总是让你的字段保持 NOT NULL。 NULL其实需要额外的空间，并且，在你进行比较的时候，你的程序会更复杂。 当然，这里并不是说你就不能使用NULL了，现实情况是很复杂的，依然会有些情况下，你需要使用NULL值。\n\n \n\n(7)固定长度的表会更快', '暂无解析', '2021-04-27 11:00:40', 9);
INSERT INTO `question` VALUES ('56c8b7b5f9d24d3cb9', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'f02ecbcbbff349e39c,ef787fb168884e32b9', '如何设计一个高并发的系统', 'simple', '① 数据库的优化，包括合理的事务隔离级别、SQL语句优化、索引的优化\n\n② 使用缓存，尽量减少数据库 IO\n\n③ 分布式数据库、分布式缓存\n\n④ 服务器的负载均衡', '暂无解析', '2021-04-27 11:00:55', 9);
INSERT INTO `question` VALUES ('91f0c9226ea64508a3', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'caa0550e52a041839e,93f7af376d2d453786', '锁的优化策略', 'simple', '① 读写分离\n\n② 分段加锁\n\n③ 减少锁持有的时间\n\n④ 多个线程尽量以相同的顺序去获取资源\n等等，这些都不是绝对原则，都要根据情况，比如不能将锁的粒度过于细化，不然可能会出现线程的加锁和释放次数过多，反而效率不如一次加一把大锁。这部分跟面试官谈了很久', '暂无解析', '2021-04-27 11:01:19', 9);
INSERT INTO `question` VALUES ('d0976d12b0b348599e', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '120363ccab7b45a1ba,b480fd778c6b40328f', '索引的底层实现原理和优化', 'simple', 'B+树，经过优化的B+树\n\n主要是在所有的叶子结点中增加了指向下一个叶子节点的指针，因此InnoDB建议为大部分表使用默认自增的主键作为主索引。', '暂无解析', '2021-04-27 11:01:48', 9);
INSERT INTO `question` VALUES ('48d2011021b04eeeaa', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'cec6b1ec2b3b4ac7a8,5bc3e8feba434a4fa3', ' 什么情况下设置了索引但无法使用 ', 'simple', '① 以“%”开头的LIKE语句，模糊匹配\n\n② OR语句前后没有同时使用索引\n\n③ 数据类型出现隐式转化（如varchar不加单引号的话可能会自动转换为int型）', '暂无解析', '2021-04-27 11:01:59', 9);
INSERT INTO `question` VALUES ('45f6c9fe84f245ba9e', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '08b4319590174678ad,ee82ce5302454632a7', '实践中如何优化MySQL', 'simple', '① SQL语句及索引的优化\n\n② 数据库表结构的优化\n\n③ 系统配置的优化\n\n④ 硬件的优化', '暂无解析', '2021-04-27 11:02:25', 9);
INSERT INTO `question` VALUES ('76d431f2217a495bae', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '63b103843adf4d2eb9,76c78d3bedde41e097', 'sql注入的主要特点', 'simple', '变种极多，攻击简单，危害极大\n\nsql注入的主要危害\n\n未经授权操作数据库的数据\n\n恶意纂改网页\n\n私自添加系统账号或者是数据库使用者账号\n\n网页挂木马', '暂无解析', '2021-04-27 11:02:38', 9);
INSERT INTO `question` VALUES ('5c6516f5240a4e9293', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '08b4319590174678ad,63b103843adf4d2eb9,ee82ce5302454632a7', '优化数据库的方法', 'simple', ' 选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL，例如’省份’、’性别’最好适用ENUM\n 使用连接(JOIN)来代替子查询\n 适用联合(UNION)来代替手动创建的临时表\n 事务处理\n 锁定表、优化事务处理\n 适用外键，优化锁定表\n 建立索引\n 优化查询语句', '暂无解析', '2021-04-27 11:03:01', 9);
INSERT INTO `question` VALUES ('ba1900c14bae4b2cbe', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '1b6995881eef477f99,d1d34bc68115498da3', '了解XSS攻击吗？如何防止？', 'simple', 'XSS是跨站脚本攻击，首先是利用跨站脚本漏洞以一个特权模式去执行攻击者构造的脚本，然后利用不安全的Activex控件执行恶意的行为。\n使用htmlspecialchars()函数对提交的内容进行过滤，使字符串里面的特殊符号实体化。', '暂无解析', '2021-04-27 11:04:02', 9);
INSERT INTO `question` VALUES ('af4c896f125045068b', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'd732a0710e214be396,4b334fb8009a418f96', 'SQL注入漏洞产生的原因？如何防止？', 'simple', 'SQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。\n\n防止SQL注入的方式：\n开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置\n\n执行sql语句时使用addslashes进行sql语句转换\n\nSql语句书写尽量不要省略双引号和单引号。\n\n过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。\n\n提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。\n\nPhp配置文件中设置register_globals为off,关闭全局变量注册\n\n控制错误信息，不要在浏览器上输出错误信息，将错误信息写到日志文件中。', '暂无解析', '2021-04-27 11:04:21', 9);
INSERT INTO `question` VALUES ('2452ddfa37f543a59f', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'd27c033c88af4a2ba8,5e19cca529884d03a1', '解释MySQL外连接、内连接与自连接的区别', 'simple', '先说什么是交叉连接: 交叉连接又叫笛卡尔积，它是指不使用任何条件，直接将一个表的所有记录和另一个表中的所有记录一一匹配。\n\n内连接 则是只有条件的交叉连接，根据某个条件筛选出符合条件的记录，不符合条件的记录不会出现在结果集中，即内连接只连接匹配的行。\n外连接 其结果集中不仅包含符合连接条件的行，而且还会包括左表、右表或两个表中\n的所有数据行，这三种情况依次称之为左外连接，右外连接，和全外连接。\n\n左外连接，也称左连接，左表为主表，左表中的所有记录都会出现在结果集中，对于那些在右表中并没有匹配的记录，仍然要显示，右边对应的那些字段值以NULL来填充。右外连接，也称右连接，右表为主表，右表中的所有记录都会出现在结果集中。左连接和右连接可以互换，MySQL目前还不支持全外连接。', '暂无解析', '2021-04-27 11:05:22', 5);
INSERT INTO `question` VALUES ('2b3c80ef00fb45c2b0', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '4b334fb8009a418f96,909207e6a6a541c59c', '写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）', 'simple', 'MyISAM、InnoDB、BDB（BerkeleyDB）、Merge、Memory（Heap）、Example、Federated、\nArchive、CSV、Blackhole、MaxDB 等等十几个引擎', '暂无解析', '2021-04-27 11:05:43', 5);
INSERT INTO `question` VALUES ('b8952f5604fb4c57a5', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '5e19cca529884d03a1,b159afd91a7a48df83', 'Myql中的事务回滚机制概述', 'simple', '事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位，事务回滚是指将该事务已经完成的对数据库的更新操作撤销。\n\n要同时修改数据库中两个不同表时，如果它们不是一个事务的话，当第一个表修改完，可能第二个表修改过程中出现了异常而没能修改，此时就只有第二个表依旧是未修改之前的状态，而第一个表已经被修改完毕。而当你把它们设定为一个事务的时候，当第一个表修改完，第二表修改出现异常而没能修改，第一个表和第二个表都要回到未修改的状态，这就是所谓的事务回滚', '暂无解析', '2021-04-27 11:06:00', 5);
INSERT INTO `question` VALUES ('8cf63b8e9bac48508d', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', '909207e6a6a541c59c,5ab565d13b914df6bc', 'SQL语言包括哪几部分？每部分都有哪些操作关键字？', 'simple', 'SQL语言包括数据定义(DDL)、数据操纵(DML),数据控制(DCL)和数据查询（DQL）四个部分。\n\n数据定义：Create Table,Alter Table,Drop Table, Craete/Drop Index等\n\n数据操纵：Select ,insert,update,delete,\n\n数据控制：grant,revoke\n\n数据查询：select', '暂无解析', '2021-04-27 11:06:19', 5);
INSERT INTO `question` VALUES ('9653a55d06694c768f', 'ec1a249ecad74cf987', 'b12ebc2ef8f44ed7a9', '05ad6e1c-b8de-4', 'b159afd91a7a48df83,b67ab4d35daf489187', '完整性约束包括哪些？', 'simple', '数据完整性(Data Integrity)是指数据的精确(Accuracy)和可靠性(Reliability)。\n\n分为以下四类：\n\n1) 实体完整性：规定表的每一行在表中是惟一的实体。\n\n2) 域完整性：是指表中的列必须满足某种特定的数据类型约束，其中约束又包括取值范围、精度等规定。\n\n3) 参照完整性：是指两个表的主关键字和外关键字的数据应一致，保证了表之间的数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散。\n\n4) 用户定义的完整性：不同的关系数据库系统根据其应用环境的不同，往往还需要一些特殊的约束条件。用户定义的完整性即是针对某个特定关系数据库的约束条件，它反映某一具体应用必须满足的语义要求。\n\n与表有关的约束：包括列约束(NOT NULL（非空约束）)和表约束(PRIMARY KEY、foreign key、check、UNIQUE) 。', '暂无解析', '2021-04-27 11:06:42', 5);
INSERT INTO `question` VALUES ('a10a91b5c0ee4ed59f', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b159afd91a7a48df83', '从数据表中查找记录用SELECT', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:45:12', 4);
INSERT INTO `question` VALUES ('5542362df483431b81', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5ab565d13b914df6bc', '以下聚合函数求最小值的是MAX', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:45:38', 5);
INSERT INTO `question` VALUES ('d107a1a0e8f9481fb5', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b67ab4d35daf489187', 'FROM命令属于DCL操作', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:45:58', 6);
INSERT INTO `question` VALUES ('4d57d3c46fac4123b8', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '24977332027c41baa8', 'mysqldump -u username -p dbname table1 table2 ...-> C:\\BackupName.sql\n根据上面命令判断出数据库名称是dbname', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:46:16', 7);
INSERT INTO `question` VALUES ('291b84290f7e49938b', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '01d65ed7e78d46cc93', '以下双方之间属于多对多关系的是用户—角色', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:46:31', 8);
INSERT INTO `question` VALUES ('78f9b7a65da648bdbb', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '6b8767fc19d24a12b6', '类属性的个数必须要和表中的字段个数一致', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:47:03', 3);
INSERT INTO `question` VALUES ('0a9804540a1a4f4fa1', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'ce02d32d25e04095b6', '类属性的名称必须要和表中的字段的名称一致', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:47:11', 3);
INSERT INTO `question` VALUES ('c2e0c31bbdc849a698', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '75a0ff8357244f4da5', '类属性的数据类型需要和表中的字段的数据类型对应', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:47:21', 3);
INSERT INTO `question` VALUES ('128399bdbd5546e7ab', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '735464e2ea9e4a6093', 'varchar类型的表字段可以对应到java类中的int类型属性', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:47:32', 4);
INSERT INTO `question` VALUES ('a1723b80876f4602aa', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '39e1ef3cb0334ecfa7', '外键约束不是单表约束', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:47:56', 4);
INSERT INTO `question` VALUES ('34e9585c9ab04c3b8a', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '143368eb5aba4be7b4', 'DECIMAL是可变精度浮点值数据类型', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:48:13', 5);
INSERT INTO `question` VALUES ('741655dec4614e5dbf', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '07f278d6cf0a40f2b9,b6a54f3d932b42cfae', '条件“age BETWEEN 20 AND 30”表示年龄在20到30之间，且包括20岁不包括30岁', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:48:36', 8);
INSERT INTO `question` VALUES ('f5bdcca432594c1ca7', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'caa0550e52a041839e', '在select语句中，实现选择操作的子句是select', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:48:57', 9);
INSERT INTO `question` VALUES ('7311564246184a3d9e', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'caa0550e52a041839e', '以下聚合函数求平均数的是AVG', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:49:16', 1);
INSERT INTO `question` VALUES ('eb556e27cfa84b3886', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '93f7af376d2d453786', '用户—银行卡双方之间属于一对多关系', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:49:43', 2);
INSERT INTO `question` VALUES ('b11f4c8c2354450991', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b480fd778c6b40328f', 'INNER JOIN用于显示内连接', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:50:06', 2);
INSERT INTO `question` VALUES ('f82890f22d25434c9c', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b480fd778c6b40328f', 'mysql -u root -p < C:\\backup.sql\n根据上面命令哪个是要恢复的文件名称backup.sql', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:50:47', 2);
INSERT INTO `question` VALUES ('25d8d568fff5484992', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'cec6b1ec2b3b4ac7a8', '查找表结构用FIND', 'bool', '错误【×】', '查找表结构用DESC', '2021-05-09 10:51:33', 3);
INSERT INTO `question` VALUES ('44f1d733079844a999', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5bc3e8feba434a4fa3', '聚合函数求数据总和的是SUM', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:51:50', 3);
INSERT INTO `question` VALUES ('5f78ee0581e541b19a', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5bc3e8feba434a4fa3', '查询姓名不是NULL的数据语法WHERE NAME IS NOT NULL', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:53:03', 1);
INSERT INTO `question` VALUES ('3f0aab9f8d194499b0', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '143368eb5aba4be7b4', 'delete from employee语句的作用是删除当前数据库中整个employee表，包括表结构', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:53:50', 3);
INSERT INTO `question` VALUES ('bf7abfa9d0b244458d', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '07f278d6cf0a40f2b9', '例如数据库中有A表，包括学生，学科，成绩 ，序号四个字段 , 数据库结构为 \n学生     学科     成绩  序号\n张三     语文     60    1\n张三     数学     100   2\n李四     语文     70    3\n李四     数学     80    4\n李四     英语     80    5\n序号列可作为主键列', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:55:16', 3);
INSERT INTO `question` VALUES ('e149840f0075490485', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b6a54f3d932b42cfae', '一个数据库服务器可以管理多个数据库，一个数据库可以包含多个表', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:56:04', 3);
INSERT INTO `question` VALUES ('401db54c02134cb59b', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'f02ecbcbbff349e39c', '一个数据库服务器只能管理一个数据库，一个数据库可以包含多个表', 'bool', '错误【×】', '暂无解析', '2021-05-09 10:56:17', 5);
INSERT INTO `question` VALUES ('e298271eae934e36b6', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'ef787fb168884e32b9', 'MySQL是关系型数据库', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:56:36', 5);
INSERT INTO `question` VALUES ('3b1b25195c2c496a89', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '93f7af376d2d453786', '对distinct解释正确的是去掉重复的值', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:56:54', 5);
INSERT INTO `question` VALUES ('be194966a31d419bb8', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '120363ccab7b45a1ba', 'SQL语句中的条件用WHILE来表达', 'bool', '错误【×】', 'SQL语句中的条件用WHERE来表达', '2021-05-09 10:57:25', 5);
INSERT INTO `question` VALUES ('49125c2c574f4f0c99', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b480fd778c6b40328f', '在SQL语言中，子查询是嵌入到另一个查询语句之中的查询语句', 'bool', '正确【√】', 'SQL语句中的条件用WHERE来表达', '2021-05-09 10:58:05', 5);
INSERT INTO `question` VALUES ('b3b041f5b9d64ed989', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'cec6b1ec2b3b4ac7a8', 'MySQl安装完毕后配置环境变量为了启动MySQl服务', 'bool', '错误【×】', 'MySQl安装完毕后配置环境变量为了在任何地方使用MySQl命令', '2021-05-09 10:58:42', 5);
INSERT INTO `question` VALUES ('82d623339fe74ba99b', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5bc3e8feba434a4fa3', 'drop table user;是删除表', 'bool', '正确【√】', '暂无解析', '2021-05-09 10:59:17', 6);
INSERT INTO `question` VALUES ('1f6b015ed16c4168b8', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '46b7c1be53d64bcc80', 'GROUP BY 子句用来分组 WHERE 子句的输出', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:02:32', 6);
INSERT INTO `question` VALUES ('1f72de6fab144a7390', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'fd9afe2faf804d32b9', 'WHERE 子句用来筛选 FROM 子句中指定的操作所产生的行。', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:02:40', 6);
INSERT INTO `question` VALUES ('c631a97b3a554f9a86', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '08b4319590174678ad', 'HAVING 子句在聚合后对组记录进行筛选', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:02:48', 6);
INSERT INTO `question` VALUES ('15a3f4b042514f60a2', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '63b103843adf4d2eb9', 'HAVING 子句用来从FROM的结果中筛选行', 'bool', '错误【×】', '暂无解析', '2021-05-09 11:02:56', 6);
INSERT INTO `question` VALUES ('bdba6126821e4fde89', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'ee82ce5302454632a7', 'MySQLl的访问端口绝对不能修改 ', 'bool', '错误【×】', '暂无解析', '2021-05-09 11:03:49', 6);
INSERT INTO `question` VALUES ('cd1a78749c3c4582a0', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '76c78d3bedde41e097', 'MySQL服务的安装路径可以修改', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:04:01', 7);
INSERT INTO `question` VALUES ('f54306c45901409ab1', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '0833051f29364a2281', 'MySQL数据文件的存放位置可以修改', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:04:11', 7);
INSERT INTO `question` VALUES ('4bb11aaeea62422e91', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '1b6995881eef477f99', 'MySQL数据库的访问端口可以修改', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:04:24', 7);
INSERT INTO `question` VALUES ('ea2ac7812135452fb4', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'd1d34bc68115498da3', '多表连接的方式有交叉连接,\n内连接,左外连接,右外连接', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:05:12', 7);
INSERT INTO `question` VALUES ('fbd7ba4b9afc4ca985', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'd732a0710e214be396', '模糊查询使用关键字like', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:05:49', 7);
INSERT INTO `question` VALUES ('a3eb174bba36428db2', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '4b334fb8009a418f96', '针对模糊查询正确的是,匹配多个字符使用”%”,匹配单个字符使用”_”', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:06:20', 7);
INSERT INTO `question` VALUES ('b8627b0bb19e42edaf', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5e19cca529884d03a1', '在Select语句中查询条件必须有。在Select语句中查询条件必须有。', 'bool', '错误【×】', '暂无解析', '2021-05-09 11:07:06', 8);
INSERT INTO `question` VALUES ('01ef917ec7f54c30a7', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '909207e6a6a541c59c', 'Java类与表之间只能是一一对应的关系。Java类与表之间只能是一一对应的关系。', 'bool', '错误【×】', '暂无解析', '2021-05-09 11:07:20', 5);
INSERT INTO `question` VALUES ('3b57cb28c770419981', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b159afd91a7a48df83', '查看表结构可以使用: DESC [表名称]查看表结构可以使用: DESC [表名称]', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:07:30', 5);
INSERT INTO `question` VALUES ('c1611c6a0a0f4c4781', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5ab565d13b914df6bc', 'SQLyon右下方的＂表数据＂选型卡中可以查看表中的记录信息SQLyon右下方的＂表数据＂选型卡中可以查看表中的记录信息', 'bool', '正确【√】', '暂无解析', '2021-05-09 11:07:42', 6);
INSERT INTO `question` VALUES ('d931a9a298eb40bab6', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', 'b67ab4d35daf489187', '使用SQLyog备份数据库时，只能备份数据。使用SQLyog备份数据库时，只能备份数据。', 'bool', '错误【×】', '暂无解析', '2021-05-09 11:08:00', 6);
INSERT INTO `question` VALUES ('a2ec92bcedd041f3a9', 'ec1a249ecad74cf987', '29aea9977a2b4f39b3', '05ad6e1c-b8de-4', '5d592f2257014e12ae', 'ML是数据查询语言,例如select查询DML是数据查询语言,例如select查询', 'bool', '错误【×】', '暂无解析', '2021-05-09 11:08:14', 6);

-- ----------------------------
-- Table structure for question_bank
-- ----------------------------
DROP TABLE IF EXISTS `question_bank`;
CREATE TABLE `question_bank`  (
  `que_bank_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '题库id',
  `que_bank_name` varchar(25) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '题库名字',
  `que_bank_describe` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '题库描述',
  `que_bank_course_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '课程id,--外键',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `create_by` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人',
  PRIMARY KEY (`que_bank_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '题库' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of question_bank
-- ----------------------------
INSERT INTO `question_bank` VALUES ('e593b8e86bdd4c6e85', 'java基础--简答题', 'java基础--简答题  --里面包含了几乎该课程所有的简答题......', '86913a596db841dd96', '2021-04-19 12:06:19', '24038b48182349fa8d');
INSERT INTO `question_bank` VALUES ('b12ebc2ef8f44ed7a9', 'mysql-简答题', '最全MySQL简答--面试题和答案', 'ec1a249ecad74cf987', '2021-04-27 10:56:31', '05ad6e1c-b8de-4');
INSERT INTO `question_bank` VALUES ('fe420a4ab25d4d468a', 'java基础-判断题 ', 'java判断题  -- 里面几乎包含了所有的判断题', '86913a596db841dd96', '2021-04-18 11:27:59', '24038b48182349fa8d');
INSERT INTO `question_bank` VALUES ('820c9f24a318469e9a', 'Java基础-选择题', 'Java程序设计-选择题的题库,里面包含了几乎所有的选择题.', '86913a596db841dd96', '2021-04-15 19:50:47', '05ad6e1c-b8de-4');
INSERT INTO `question_bank` VALUES ('fc5a87c696e64fca89', '软件工程-选择题', '该题库几乎包含了 -软件工程 这门课程所有的选择题', 'cefe3f09e3a7446683', '2021-04-20 11:13:54', '05ad6e1c-b8de-4');
INSERT INTO `question_bank` VALUES ('d3d29b7bb68e474a95', '软件工程-判断题', '里面几乎包含了<<软件工程>> 课程所有的判断题', 'cefe3f09e3a7446683', '2021-04-23 09:57:43', '05ad6e1c-b8de-4');
INSERT INTO `question_bank` VALUES ('ca978a28ef0c41fcac', '软件工程 - 简单题', '这个题库有许多 <<软件工程>> 的简答题\n', 'cefe3f09e3a7446683', '2021-04-23 12:10:46', '05ad6e1c-b8de-4');
INSERT INTO `question_bank` VALUES ('7ab7ed0e8d1f49f08a', 'MySQL选择题', '该题库属于MySQL,里面包含了大量的选择题', 'ec1a249ecad74cf987', '2021-04-25 13:30:36', '05ad6e1c-b8de-4');
INSERT INTO `question_bank` VALUES ('29aea9977a2b4f39b3', 'MySQL-判断题', '该题库可录入课程<<MySQL>>的判断题', 'ec1a249ecad74cf987', '2021-05-09 10:44:33', '05ad6e1c-b8de-4');

-- ----------------------------
-- Table structure for question_choice
-- ----------------------------
DROP TABLE IF EXISTS `question_choice`;
CREATE TABLE `question_choice`  (
  `que_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '试题id',
  `que_course_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '所属的课程id',
  `que_bank_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '所属的题库id',
  `que_create_by` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人--跟user_id就名字不一样',
  `knowledge_ids` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '知识点列表',
  `que_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '试题内容',
  `que_a` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '选项A',
  `que_b` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '选项B',
  `que_c` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '选项C',
  `que_d` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '选项D',
  `que_answer` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '参考答案---',
  `que_answer_describe` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '答案解析',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `que_difficulty` bigint(1) NOT NULL COMMENT '题目难度(1-10)',
  PRIMARY KEY (`que_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of question_choice
-- ----------------------------
INSERT INTO `question_choice` VALUES ('25cc256c7618426186', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '97b102a325b54bfb9f,4e56437d15874ff495', '一个Java程序运行从上到下的环境次序是（）', '操作系统、Java程序、JRE/JVM、硬件', 'JRE/JVM、Java程序、硬件、操作系统', 'Java程序、JRE/JVM、操作系统、硬件', 'Java程序、操作系统、JRE/JVM、硬件', 'C', '一个Java程序运行从上到下的环境次序是Java程序、JRE/JVM、操作系统、硬件', '2021-04-15 20:07:30', 5);
INSERT INTO `question_choice` VALUES ('50c12d53b7a043059b', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '390942390aa942729b,bb354a7cf5d64c03a1', '下面哪些是合法的标识符。', 'persons', '12345', '*point', 'this3', 'A', '下面哪些是合法的标识符。->persons', '2021-04-15 20:11:03', 6);
INSERT INTO `question_choice` VALUES ('888c76288c28405e83', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92,595481fdddaf4382a2', '下说法正确的是：(  )', '一个可直接运行的Java源文件中可以有多个public类，其中必须有一个和文件同名', '一个可直接运行的Java源文件中可以没有public类', 'C一个可直接运行的Java源文件中只能有一个且和文件同名的public类。\n', '一个可直接运行的Java源文件中可以有多个public类，且可以没有和文件同名的类。\n', 'C', '暂无解析', '2021-04-15 20:12:15', 4);
INSERT INTO `question_choice` VALUES ('eefb3a860b2d4cb88f', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '595481fdddaf4382a2', '在java中定义常量的正确语法为：（）', ' int value=20;', 'const int VALUE=20;', 'final int VALUE=20;', ' int VALUE=20;', 'C', '在java中定义常量的正确语法为：final int VALUE=20;', '2021-04-15 20:35:20', 3);
INSERT INTO `question_choice` VALUES ('8c33090488bc425d97', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '4acbb627c9ce41b294', '编译一个定义了3个类和10个办法的Java源文件后，会产生多少个字符码文件，扩展名是什么（）', '13个字节码文件，扩展名是.class', '1个字节码文件，扩展名是.class', '3个字节码文件，扩展名是.java', '3个字节码文件，扩展名是.class', 'D', '3', '2021-04-15 20:38:40', 8);
INSERT INTO `question_choice` VALUES ('8a49fc4ed861452e88', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '8bfb561070154e6284,0f19101e2a4942a593', '下列属于Java语言的特点的一项是( )。', '运算符重载', '类间多重继承', '指针操作', '垃圾回收', 'D', ' 暂无解析', '2021-04-15 20:40:42', 9);
INSERT INTO `question_choice` VALUES ('732b750a0ec04a6291', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'e4dc8c2bf8cf4245b3', '正确定义一个初始值为20的float类型的变量的语句是:(  )', 'float #value=20f; ', 'float value#=20;\n', ' float _value=20f; ', ' float value=20;', 'C', '正确定义一个初始值为20的float类型的变量的语句是:float _value=20f; ', '2021-04-15 20:42:21', 3);
INSERT INTO `question_choice` VALUES ('fa17d9f1b3954938b4', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'c94c1cf2aceb47d38c', '下语句不能通过编译的是（）', 'int[] a={1,2,3,4};', 'int b[];\n', 'int c[]=new int[3];', 'int d=new int[];', 'D', ' 暂无解析', '2021-04-15 20:43:04', 5);
INSERT INTO `question_choice` VALUES ('4a0dcefa229e4eae99', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'fdd6466447ab48b994', '下列关于浮点型数据的说法中，不正确的一个是(  )。\n', '浮点型数据属于实犁数据', '浮点型数据由数据和小数组成', '浮点型数据小数位数越少越精确\n', '浮点数据包括实型常量和实变量', 'C', '暂无解析', '2021-04-15 20:44:08', 4);
INSERT INTO `question_choice` VALUES ('5ed2de72550e49e198', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f89811e51123439795,8bfb561070154e6284', '现有2个byte类型的变量bb=126、bb2=5，当执行bbl=(byte)(bb+bb2)；语句之后，bb的值应该\n是(  )。', '-128', '131', '-125 bb1 ', '语句在编泽中出错', 'C', 'bbl=(byte)(bb+bb2)；语句之后，bb的值应该', '2021-04-15 20:44:57', 3);
INSERT INTO `question_choice` VALUES ('8c19362c760c4e64b4', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '4fc83f3b0a1d4c7f91', '下列描述中，不正确的是(  )。', 'Java不支持多线程\n', '一个Java源程序中不允许有多个公共类\n', 'Java程序可以划分为两大类：Application和Applet', 'Java通过接口支持多重继承', 'A', '暂无解析', '2021-04-15 20:46:05', 2);
INSERT INTO `question_choice` VALUES ('672c28561c8541c0b3', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '23a1ec2c973f4b12be,f7a619f299e5490c92', '关于以下程序代码的说明正确的是（     ）  \n1．class  HasStatic{  \n2．    private  static  int  x=100；  \n3．    public  static  void  main(String  args[  ]){  \n4．        HasStatic  hs1=new  HasStatic(  );  \n5．        hs1.x++;  \n6． HasStatic  hs2=new  HasStatic(  );  \n7．        hs2.x++;  \n8．        hs1=new  HasStatic( );  \n9．        hs1.x++;  \n10．       HasStatic.x- -;  \n11．       System.out.println(“x=”+x);  \n12．    }  \n13． }  \n', '5行不能通过编译，因为引用了私有静态变量', '10行不能通过编译，因为x是私有静态变量', '程序通过编译，输出结果为：x=103', '程序通过编译，输出结果为：x=102', 'D', '111', '2021-04-19 14:14:00', 6);
INSERT INTO `question_choice` VALUES ('4e09c891c53149fb92', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '06f9a0da902e40b0bc,71abb7c01311487c9c', '以下选项中循环结构合法的是（     ）', 'while (int  i<7)  \n{     i++;  \n     System.out.println(“i is “+i);   }\n', 'int  j=3;  \nwhile(j)  \n   {  System.out.println(“ j  is “+j);  }  \n', 'int  j=0;  \nfor(int  k=0; j + k !=10; j++,k++)  \n{    System.out.println(“ j  is “+ j + “k  is”+ k);  }\n', 'int  j=0;  do{  \n              System.out.println( “j  is “+j++);  \n              if (j = = 3) {continue  loop;}  \n              }while  (j<10);\n', 'C', '22', '2021-04-19 14:15:41', 5);
INSERT INTO `question_choice` VALUES ('33307754fd03486491', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '4e56437d15874ff495', '类Test1定义如下：  \n1．public  class  Test1{  \n2．         public  float  aMethod（float  a，float  b）{   }  \n3．           \n4．}         \n将以下哪种方法插入行3是不合法的。（       ） \n', 'public  float  aMethod（float  a， float  b，float  c）{  } ', 'public  float  aMethod（float  c，float d）{  }', 'public  int  aMethod（int  a， int b）{  }', 'private float aMethod（int a，int b，int c）{  }', 'B', '暂无解析', '2021-04-19 14:17:01', 7);
INSERT INTO `question_choice` VALUES ('13cd6929a9524c549f', '86913a596db841dd96', 'fe420a4ab25d4d468a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92,cd82e1319c0b487b83', '类Test1、Test2定义如下：  \n1．  public  class  Test1  \n2．{ public  float  aMethod（float a，float b） throws  \n3．  IOException {      }  \n4． }  \n5． public  class  Test2  extends  Test1{  6．  7．}  \n       将以下哪种方法插入行6是不合法的。（    ）', 'float  aMethod（float  a，float  b）{ } ', 'public  int  aMethod（int a，int b）throws  Exception{ }', 'public  float  aMethod（float  p，float q）{ }', 'public  int  aMethod（int a，int  b）throws IOException{ }', 'A', '暂无解析', '2021-04-19 14:18:21', 8);
INSERT INTO `question_choice` VALUES ('e9be79c73f26484aa3', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '71abb7c01311487c9c,4fc83f3b0a1d4c7f91', '关于以下程序段，正确的说法是（    ）  \n1．  String  s1=”abc”+”def”;  \n2．  String  s2=new  String（s1）；  \n3．  if（s1= =s2）  \n4．     System.out.println(“= = succeeded”);  \n5．  if (s1.equals(s2))  \n6．     System.out.println(“.equals()  succeeded”);\n', '行4与行6都将执行', '行4执行，行6不执行', '行6执行，行4不执行', '行4、行6都不执行', 'C', '暂无解析', '2021-04-19 14:19:23', 6);
INSERT INTO `question_choice` VALUES ('bcfbde55ae0f40178c', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92', 'Java application中的主类需包含main方法，main方法的返回类型是什么？（  ）', 'int', 'float', 'double', 'void', 'D', '暂无解析', '2021-04-19 14:20:21', 4);
INSERT INTO `question_choice` VALUES ('86588b1f582c457791', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '595481fdddaf4382a2,d02bac192e0d4129a7', '以下哪个方法用于定义线程的执行体？ （      ）', 'start()', 'init()', 'run()', 'synchronized()', 'C', '暂无解析', '2021-04-19 14:21:12', 6);
INSERT INTO `question_choice` VALUES ('275cd2a90eb7450085', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '71abb7c01311487c9c', '以下标识符中哪项是不合法的(        )', 'const', '$double', 'hello', 'BigMeaninglessName', 'A', '暂无解析', '2021-04-19 14:22:01', 4);
INSERT INTO `question_choice` VALUES ('e115cc1302fe45e889', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '595481fdddaf4382a2,cd82e1319c0b487b83', '以下哪个关键字可以用来为对象加互斥锁？（     ）', 'transient', 'static', 'serialize', 'synchronized', 'D', '暂无解析', '2021-04-19 14:22:48', 7);
INSERT INTO `question_choice` VALUES ('b9767da32a1045098d', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', 'd70f5307646540ad87,595481fdddaf4382a2,71abb7c01311487c9c,4fc83f3b0a1d4c7f91', 'e         D、synchronized  \n21.     在Java中，一个类可同时定义许多同名的方法，这些方法的形式参数个数、类型或顺序各不相同，传回的值也可以不相同。这种面向对象程序的特性称为（   ）。\n', '隐藏', '覆盖', '重载', 'Java不支持此特性', 'C', '暂无解析', '2021-04-19 14:24:01', 5);
INSERT INTO `question_choice` VALUES ('d42b8604205d4c32b5', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '71abb7c01311487c9c,4fc83f3b0a1d4c7f91', '以下关于构造函数的描述错误的是（   ）', '构造函数的返回类型只能是void型。', '构造函数是类的一种特殊函数，它的方法名必须与类名相同。', '构造函数的主要作用是完成对类的对象的初始化工作。', '一般在创建新对象时，系统会自动调用构造函数。  ', 'A', '暂无解析', '2021-04-19 14:24:56', 6);
INSERT INTO `question_choice` VALUES ('587d0783e8cc4a829b', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '595481fdddaf4382a2,cd82e1319c0b487b83', '下列哪些语句关于Java内存回收的说明是正确的?()', '程序员必须创建一个线程来释放内存', '内存回收程序负责释放无用内存', '内存回收程序允许程序员直接释放内存', '内存回收程序可以在指定的时间释放内存对象', 'B', '暂无解析', '2021-04-19 14:25:55', 5);
INSERT INTO `question_choice` VALUES ('9161cb4dde924e57bf', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', 'f7a619f299e5490c92,4fc83f3b0a1d4c7f91', '若需要定义一个类域或类方法，应使用哪种修饰符？（     ）', 'static', 'package', 'private', 'public', 'C', '暂无解析', '2021-04-19 14:26:42', 4);
INSERT INTO `question_choice` VALUES ('086210a8f35f4ab6bf', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '595481fdddaf4382a2,4fc83f3b0a1d4c7f91', '有以下方法的定义，请选择该方法的返回类型（    ）。 ReturnType  method(byte x, double y)                            {     return  (short)x/y*2; }', 'byte', 'short', 'int', 'double', 'D', '暂无解析', '2021-04-19 14:27:20', 7);
INSERT INTO `question_choice` VALUES ('a5a23a94ef5e43fb98', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '8bfb561070154e6284,c86e153096114602b9', '有以下程序片段，下列哪个选项不能插入到行1。（    ）\n public  class  Interesting{  \n//do sth     \n } \n', 'import java.awt.*;', 'package mypackage;', 'class OtherClass{   }', 'public class MyClass{ }', 'D', '暂无解析', '2021-04-19 14:28:53', 7);
INSERT INTO `question_choice` VALUES ('cf523b7e4e594af19a', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '71abb7c01311487c9c,d02bac192e0d4129a7', '以下哪项是接口的正确定义？（        ）', 'interface B{  void print()  {  } ;}', 'abstract  interface  B  \n{ void print() ;}\n', 'abstract  interface  B  extends  A1,A2  //A1、A2为已定义的接口  \n{ abstract  void  print(){  };}\n', 'interface  B  \n      {  void  print();} \n', 'D', '暂无解析', '2021-04-19 14:30:51', 4);
INSERT INTO `question_choice` VALUES ('410190c5ea194184b9', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', 'd02bac192e0d4129a7,8bfb561070154e6284', '下面哪个函数是public void  aMethod(){...}的重载函数？（   ）', 'void  aMethod( ){...}', 'public int  aMethod(){...}', 'public void  aMethod ( ){...}', 'public int  aMethod ( int m){...}', 'D', '暂无解析', '2021-04-19 14:31:54', 7);
INSERT INTO `question_choice` VALUES ('3ce5399e2dc848e0ad', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '23a1ec2c973f4b12be', 'A派生出子类B，B派生出子类C，并且在Java源代码中有如下声明：\n1.    A  a0=new  A();  \n2.    A  a1 =new  B();  \n3.    A  a2=new  C();  \n问以下哪个说法是正确的？ （     ）\n', '只有第1行能通过编译', '第1、2行能通过编译，但第3行编译出错', '第1、2、3行能通过编译，但第2、3行运行时出错', '第1行、第2行和第3行的声明都是正确的', 'D', '暂无解析', '2021-04-19 14:34:38', 4);
INSERT INTO `question_choice` VALUES ('79664153ac534d3999', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', 'f7a619f299e5490c92,71abb7c01311487c9c', '假设A类有如下定义，设a是A类的一个实例，下列语句调用哪个是错误的？（     ）\nclass  A  \n{     int  i;  \n       static  String  s;  \n       void  method1() {   }  \n       static  void  method2()  {   }\n', 'System.out.println(a.i)；', 'a.method1();', 'A.method1();', 'A.method2()', 'C', '暂无解析', '2021-04-19 14:36:25', 5);
INSERT INTO `question_choice` VALUES ('2e55c0267312444392', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '595481fdddaf4382a2', '有如下代码段:   1)   \n2) { if(unsafe()){//do something…}   \n3) else if(safe()){//do the other…}   4) }   \n其中，方法unsafe() 将抛出IOException, 请问可将以下哪项填入第1行？（     ）\n', ' public IOException methodName()', 'public void methodName()', 'public void methodName() throw IOException', 'public void methodName() throws IOException', 'D', '暂无解析', '2021-04-19 14:37:36', 6);
INSERT INTO `question_choice` VALUES ('74fdf9d1659a4fe1b9', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', 'f7a619f299e5490c92', 'Java的字符类型采用的是Unicode编码方案，每个Unicode码占用（   ）个比特位', '8', '16', '32', '64', 'C', '暂无解析', '2021-04-19 14:38:28', 6);
INSERT INTO `question_choice` VALUES ('e3074e34209145e491', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '71abb7c01311487c9c', '以下关于继承的叙述正确的是（    ）。', ' 在Java中类只允许单一继承', '在Java中一个类只能实现一个接口', '在Java中一个类不能同时继承一个类和实现一个接口 ', ' 在Java中接口只允许单一继承', 'A', '暂无解析', '2021-04-19 14:44:42', 4);
INSERT INTO `question_choice` VALUES ('4074d472a40e4c489b', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', '4fc83f3b0a1d4c7f91', '给出下面代码，关于该程序以下哪个说法是正确的？（     ）  \npublic class Person{   \nstatic int arr[] = new int[5];  \npublic static void main(String a[]) {   \nSystem.out.println(arr[0]);}  }   }\n', '编译时将产生错误', '编译时正确，运行时将产生错误', '输出零', '输出空', 'C', '暂无解析', '2021-04-19 14:47:19', 5);
INSERT INTO `question_choice` VALUES ('4d76bfa31ed84f9f86', '86913a596db841dd96', '820c9f24a318469e9a', 'ef3297d46c7d47eaa9', 'f7a619f299e5490c92,d02bac192e0d4129a7', '编译并运行以下程序，以下描述哪个选项是正确的（     ）  \n1.  class  A{  \n2.      protected  boolean  equals(){  \n3.           return  super.equals();\n         }  \n4.    } \n', '编译通过运行无异常 ', '编译通过但运行时出错 ', '不能成功编译，行3出错', '行2出错，不能成功编译', 'D', '暂无解析', '2021-04-19 14:49:30', 5);
INSERT INTO `question_choice` VALUES ('58ed25ffcd6d4c3682', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', 'e4621a889faf4a63a1', '需求规格说明书的作用不应该包括（  ）。', '软件设计的依据', '用户与开发人员对软件要做什么的共同理解', '软件验收的依据 ', '软件可行性研究的依据', 'D', '需求规格说明书的作用不应该包括软件可行性研究的依据', '2021-04-20 11:16:18', 3);
INSERT INTO `question_choice` VALUES ('e5b95a95f0bf42fbad', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '70c91de7e20a49808f', '结构化设计方法在软件开发中用于（ ）。', ' 概要设计', '详细设计', '程序设计', '测试用例设计', 'A', '暂无解析', '2021-04-20 11:18:49', 4);
INSERT INTO `question_choice` VALUES ('e0a71b9dc5c2406881', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '0433440b85014c03bd', '软件结构使用的图形工具，一般采用（ ）图', 'DFD', ' PAD', ' SC', 'ER', 'C', '暂无解析', '2021-04-20 11:19:30', 5);
INSERT INTO `question_choice` VALUES ('df1c8b08ecd043c8ab', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '49f784fb241f47608d', 'JSP 方法是一种面向（   ）的设计方法。', '对象', '数据流', '控制结构', '数据结构', 'D', '暂无解析', '2021-04-20 11:23:41', 6);
INSERT INTO `question_choice` VALUES ('076050b4a5ee4912a5', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '22735980751b498f86,4389ed8f3bc7415c92', ' 程序设计语言的技术特性不应包括（）。', '数据结构的描述性', '抽象类型的描述性', '数据库的易操作性', '软件的可移植性', 'D', '暂无解析', '2021-04-20 11:25:32', 5);
INSERT INTO `question_choice` VALUES ('d5201f6c59d645b898', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '22735980751b498f86,49f784fb241f47608d', '软件测试中，白盒法是通过分析程序的（   ）来设计测试用例\n的', '应用范围', '内部逻辑 ', '功能\n', '输入数据', 'B', '暂无解析', '2021-04-20 11:26:17', 5);
INSERT INTO `question_choice` VALUES ('b31e447ffdb2495989', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '4c347b712bd94d1aba,4389ed8f3bc7415c92', '软件维护费用高的主要原因是（  ）。', '人员少', '人员多 ', '生产率低', '生产率高', 'C', '暂无解析', '2021-04-20 11:26:55', 7);
INSERT INTO `question_choice` VALUES ('1de1905e6b964287b5', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '698e64ede5b545e6be,22735980751b498f86,7a12af41132e464bb9', '瀑布模型本质上是一种（  ）模型。', '线性顺序', '顺序迭代', '线性迭代', '及早见产品', 'A', '暂无解析', '2021-04-20 11:27:37', 5);
INSERT INTO `question_choice` VALUES ('bdc2c70ca629468d91', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', 'e48674e760f44ee783,95595ad72eb34a5da8', '软件质量必须在（   ）加以保证。 ', '开发之前 ', '开发之后', '可行性研究过程中 ', '设计与实现过程中', 'D', '暂无解析', '2021-04-20 11:31:19', 5);
INSERT INTO `question_choice` VALUES ('8aedcf310a2e4b9198', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '7b2063f528b847e396', '确认测试主要涉及的文档是（  ）。', '需求规格说明书 ', '概要设计说明书', '详细设计说明书', '源程序', 'A', '确认测试主要涉及的文档是需求规格说明书 ', '2021-04-20 11:36:48', 4);
INSERT INTO `question_choice` VALUES ('5d64025c7e2e483dbf', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '80d9416adefa40a6b4,962d9977178746f5b0,914a7617058343f499', '需求分析中，开发人员要从用户那里解决的最重要的问题是\n(   ) ', '要让软件做什么', '要给该软件提供哪些信息', '要求软件工作效率怎样', '要让该软件具有何\n种结构', 'A', '暂无解析', '2021-04-20 11:37:31', 8);
INSERT INTO `question_choice` VALUES ('e319007d491c4b54b9', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '9076665dd3f2466d9f,962d9977178746f5b0,95595ad72eb34a5da8', 'DFD中的每个加工至少有 (  ) 。', '一个输入流或一个输出流', '一个输入流和一个输出流', '一个输入流', '一个输出流', 'B', '暂无解析', '2021-04-20 11:38:24', 5);
INSERT INTO `question_choice` VALUES ('2afc90fae50b4d71ad', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', 'a5a904c02997438ba0', '详细设计与概要设计衔接的图形工具是 (B ) ', 'DFD图 ', 'SC图', 'PAD图', '程序流程图', 'B', '暂无解析', '2021-04-20 11:39:11', 4);
INSERT INTO `question_choice` VALUES ('05686db52cf24e868c', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', 'f0137215abd84028aa,914a7617058343f499', '下列几种类型中，耦合性最弱的是 ( )', '内容型', '控制型', '公共型', '数据型', 'D', '暂无解析', '2021-04-20 11:40:57', 4);
INSERT INTO `question_choice` VALUES ('11dcf567be4e4301b0', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '7a12af41132e464bb9,b187c32177214bf5af', '确认测试中，作为测试依据的文档是 (  )', '需求规格说明书 ', '设计说明书', '源程序', '开发计划', 'A', '暂无解析', '2021-04-20 11:42:07', 7);
INSERT INTO `question_choice` VALUES ('4eba998fec9644f3b3', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', 'a56a38238cef47758c,f0137215abd84028aa', '. 为了适应软硬件环境变化而修改软件的过程是 (  ) 。', '校正性维护', '完善性维护', '适应性维护 ', '预防性维护', 'C', '暂无解析', '2021-04-20 11:42:47', 5);
INSERT INTO `question_choice` VALUES ('4fb10c1f0d7e40038b', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '3ade8921796345e69e,962d9977178746f5b0', '瀑布模型是一种 (  )', '整体开发模型 ', '非整体开发模型', '风险驱动模型', '对象驱动模型', 'A', '暂无解析', '2021-04-20 11:43:25', 8);
INSERT INTO `question_choice` VALUES ('5d6a9e7d6c3844d99b', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '87e7a849-3085-4', '3ade8921796345e69e,95595ad72eb34a5da8', '用于描述对象模型的工具是 (   )', '数据流图', '结构图', '状态图', '对象图', 'D', '暂无解析', '2021-04-20 11:44:00', 6);
INSERT INTO `question_choice` VALUES ('8b9d4fba02cd46f6a9', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '7b2063f528b847e396,4389ed8f3bc7415c92', '基线可作为软件生存期中各开发阶段的一个检查点。 当采用的\n基线发生错误时，可以返回到最近和最恰当 的(   ) 上', '配置项 ', '程序', '基线', '过程', 'C', '暂无解析', '2021-04-20 11:44:50', 7);
INSERT INTO `question_choice` VALUES ('6cf9b06747534f96ac', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '698e64ede5b545e6be,22735980751b498f86', '软件质量保证应在 (   ) 阶段开始。', ' 需求分析', '设计', '编码', '投入使用', 'A', '暂无解析', '2021-04-20 11:45:21', 6);
INSERT INTO `question_choice` VALUES ('dd1912e49f1c4041ae', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '7b2063f528b847e396,feb5c6d4da6b423a8d', '在下列工具与环境中（   ）属于较早期的 CASE。 ', '基于信息工程 CASE', '人工智能 CASE ', '结构的基于图形 CASE', '集成的 CASE环境', 'C', '暂无解析', '2021-04-20 11:46:13', 8);
INSERT INTO `question_choice` VALUES ('49026aeebab243b2a9', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '22735980751b498f86,4389ed8f3bc7415c92', 'Putnam成本估算模型是一个（ ）。', '静态单变量', '动态单变量', '静态多变量', '动态多变量', 'D', '暂无解析', '2021-04-20 11:46:54', 6);
INSERT INTO `question_choice` VALUES ('80d8b8864d5d449780', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'ec5cd4ac7a474595a3,7b2063f528b847e396,49f784fb241f47608d,f0137215abd84028aa', '在 McCall 软件质量度量模型中， （  ）属于面向软件产品修\n改。 ', '可靠性', '可重用性', '适应性', '可移植性', 'C', '暂无解析', '2021-04-20 11:47:45', 9);
INSERT INTO `question_choice` VALUES ('9ceee8a7eb6f41efbe', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '70c91de7e20a49808f,7b2063f528b847e396', 'ISO 的软件质量评价模型由 3 层组成，其中用于评价设计质\n量的准则是（  ）', 'SQIC', 'SQMC ', 'SQRC ', 'SQDC', 'D', '暂无解析', '2021-04-20 11:48:19', 6);
INSERT INTO `question_choice` VALUES ('07649ede75104336bc', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'ec5cd4ac7a474595a3,4c347b712bd94d1aba', '软件复杂性度量的参数包括（   ）', '效率', '规模', '完整性 ', '容错性', 'B', '暂无解析', '2021-04-20 11:48:58', 7);
INSERT INTO `question_choice` VALUES ('4b72044e578e403189', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '49f784fb241f47608d,95595ad72eb34a5da8,7a12af41132e464bb9', '对象实现了数据和操作的结合，使数据和操作（   ）于对象\n的统一体中。 ', '结合', '隐藏', '封装', '抽象', 'C', '暂无解析', '2021-04-20 11:49:32', 8);
INSERT INTO `question_choice` VALUES ('8d8c08daab68468bb6', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'e4621a889faf4a63a1,95595ad72eb34a5da8', '软件调试技术包括（  ）', '边界值分析', '演绎法', '循环覆盖', '集成测试', 'B', '暂无解析', '2021-04-20 11:49:58', 5);
INSERT INTO `question_choice` VALUES ('270491c69f1648b891', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '7b2063f528b847e396,4a011e6fcb354e9799', '瀑布模型的存在问题是（   ）', '用户容易参与开发', '缺乏灵活性', '用户与开发者易沟通', '适用可变需求', 'B', '暂无解析', '2021-04-20 14:06:02', 7);
INSERT INTO `question_choice` VALUES ('f9be7341569245658d', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '4a011e6fcb354e9799,53d74b274ef24779a3', '软件测试方法中的静态测试方法之一为（  ） ', '计算机辅助静态分析', '黑盒法', '路径覆盖', '边界值分析', 'A', '暂无解析', '2021-04-20 14:06:34', 6);
INSERT INTO `question_choice` VALUES ('e916ee392c1c429e9e', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '914a7617058343f499', '软件生命周期中所花费用最多的阶段是（   ）', '详细设计', '软件编码', '软件测试', '软件维护', 'D', '暂无解析', '2021-04-20 14:07:09', 4);
INSERT INTO `question_choice` VALUES ('0172cb1334b54dd881', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'e4621a889faf4a63a1,962d9977178746f5b0', '第一个体现结构化编程思想的程序设计语言是（   ）', 'FORTRAN语言', 'Pascal 语言', 'C语言', 'PL/1 语言', 'B', '暂无解析', '2021-04-20 14:07:52', 6);
INSERT INTO `question_choice` VALUES ('d48669b4e6f942738b', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '962d9977178746f5b0,7a12af41132e464bb9', '程序的三种基本控制结构是（   ）', '过程、子程序和分程序', '顺序、选择和重复', '递归、堆栈和队列', '调用、返回和转移', 'B', '暂无解析', '2021-04-20 14:08:27', 6);
INSERT INTO `question_choice` VALUES ('ba6bc2b6adfb471896', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'f0137215abd84028aa,a5a904c02997438ba0', '在详细设计阶段，经常采用的工具有（   ）', 'PAD ', 'SA', 'SC', 'DFD', 'A', '暂无解析', '2021-04-20 14:09:15', 7);
INSERT INTO `question_choice` VALUES ('1147850d050845068c', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '3ade8921796345e69e,95595ad72eb34a5da8', '详细设计的结果基本决定了最终程序的（  ）', '代码的规模', '运行速度', '质量', '可维护性', 'C', '暂无解析', '2021-04-20 14:09:47', 7);
INSERT INTO `question_choice` VALUES ('acad90d9825640628b', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '9e56248707a9458380', '需求分析中开发人员要从用户那里了解（   ）', '软件做什么', '用户使用界面', '输入的信息', '软件的规模', 'A', '暂无解析', '2021-04-20 14:10:19', 5);
INSERT INTO `question_choice` VALUES ('5f2a8374b9fd489386', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'feb5c6d4da6b423a8d', '结构化程序设计主要强调的是（  ）', '程序的规模', '程序的效率', '程序设计语言的先进性', '程序易读性', 'D', '暂无解析', '2021-04-20 14:10:53', 6);
INSERT INTO `question_choice` VALUES ('078eb163d16a407ea0', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '9e56248707a9458380', 'IDEF。图反映系统（   ）', '怎么做', '对谁做', '何时做', '做什么', 'D', '暂无解析', '2021-04-20 14:11:24', 5);
INSERT INTO `question_choice` VALUES ('3a38f95378eb4a5483', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'feb5c6d4da6b423a8d', '经济可行性研究的范围包括（   ）', '资源有效性', '管理制度', '效益分析', '开发风险', 'C', '暂无解析', '2021-04-20 14:11:52', 5);
INSERT INTO `question_choice` VALUES ('3a6c4323b2bc46bc84', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '9e56248707a9458380,962d9977178746f5b0', '可行性分析是在系统开发的早期所做的一项重要的论证工作，\n它是决定该系统是否开 发的决策依据，因必须给出（  ）的回\n答。', '确定', '行或不行', '正确', '无二义', 'B', '暂无解析', '2021-04-20 14:12:48', 6);
INSERT INTO `question_choice` VALUES ('e119a66588284908bb', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'feb5c6d4da6b423a8d', '需求分析阶段的任务是确定（   ）', ' 软件开发方法', '软件开发工具', '软件开发费\n', ' 软件系统的功能', 'D', '暂无解析', '2021-04-20 14:13:16', 6);
INSERT INTO `question_choice` VALUES ('5ccbb18038a442999f', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'a56a38238cef47758c', '开发软件所需高成本和产品的低质量之间有着尖锐的矛盾， 这种现象称做 ()', '软件工程', '软件周期', '软件危机', '软件产生', 'C', '暂无解析', '2021-04-20 14:13:54', 5);
INSERT INTO `question_choice` VALUES ('4300716f8f9742fe98', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'a56a38238cef47758c', 'IDEF0 图不反映出系统()', '系统做什么 ', '系统功能如何实现', '系统由谁来做', '系统实现的约束条件', 'B', '暂无解析', '2021-04-20 14:14:58', 4);
INSERT INTO `question_choice` VALUES ('e3c94c96cd134385bc', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'ec5cd4ac7a474595a3', ' 模块的内聚性最高的是()', '逻辑内聚', '时间内聚', '偶然内聚 ', '功能内聚', 'D', '暂无解析', '2021-04-20 14:15:36', 8);
INSERT INTO `question_choice` VALUES ('c785ee665c774c83ae', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '9e56248707a9458380', '在 SD方法中全面指导模块划分的最重要的原则是 (  )', '程序模块化 ', '模块高内聚', '模块低耦合 ', '模块独立性', 'D', '暂无解析', '2021-04-20 14:16:07', 6);
INSERT INTO `question_choice` VALUES ('6fefb3a9e5944fe1a4', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '698e64ede5b545e6be,962d9977178746f5b0', '软件详细设计主要采用的方法是(  )', '模块设计 ', '结构化设计', 'PDL语言', '结构化程序设计', 'D', '暂无解析', '2021-04-20 14:16:45', 8);
INSERT INTO `question_choice` VALUES ('7fdce79e556d4c889f', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'ec5cd4ac7a474595a3,4c347b712bd94d1aba', '下列关于 JSP方法不正确的说法是(  )', 'JSP 方法主要用于规模不大的数据处理系统', 'JSP 方法不明确的划分软件概要设计和详细设计的两个阶段\n', 'JSP方法适用于输入数据和输出数据之间有对应关系的问题求\n解\n', 'JSP 方法根据输入、输出的数据结构，按一定的规则映射成软件的体系结构。因此它只适用于详细设计阶段\n', 'D', '暂无解析', '2021-04-20 14:17:38', 6);
INSERT INTO `question_choice` VALUES ('d042f94e56f941038c', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '6b7730085346422c8a', '不适合作为科学工程计算的语言是( )', ' Pascal', 'c', 'Fortran', 'Prolog', 'D', '暂无解析', '2021-04-20 14:18:15', 5);
INSERT INTO `question_choice` VALUES ('22078e01772e425db7', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '22735980751b498f86', '黑盒测试在设计测试用例时，主要需要研究( )', '需求规格说明与概要设计说明 ', '详细设计说明', '项目开发计划', '概要设计说明与详细设计说明', 'A', '暂无解析', '2021-04-20 14:19:00', 7);
INSERT INTO `question_choice` VALUES ('88283c4bee26424384', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '7b2063f528b847e396,3ade8921796345e69e', '若有一个计算类型的程序，它的输入量只有一个，其范围是现从输入的角度考虑一组测试用例： 设计这组测试用例的方法是 ( )', '条件覆盖法', '等价分类法', '边界值分析法', '错误推测法', 'C', '暂无解析', '2021-04-20 14:19:49', 6);
INSERT INTO `question_choice` VALUES ('3474dc9e059245ea97', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '53d74b274ef24779a3', '下列属于维护阶段的文档是( )', '软件规格说明', '用户操作手册', '软件问题报告', '软件测试分析报告', 'C', '暂无解析', '2021-04-20 14:20:16', 5);
INSERT INTO `question_choice` VALUES ('735107f5093a4f7892', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'ecac24895971451a9c,a56a38238cef47758c', '快速原型模型的主要特点之一是 ( )', '开发完毕才见到产品', '及早提供全部完整的软件产品', '开发完毕后才见到工作软件', '及早提供工作软件', 'D', '暂无解析', '2021-04-20 14:20:54', 8);
INSERT INTO `question_choice` VALUES ('6756415a683048ee89', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'ecac24895971451a9c', '因计算机硬件和软件环境的变化而作出的修改软件的过程称为 ( )', '教正性维护', '适应性维护', '完善性维护', '预防性维护', 'B', '暂无解析', '2021-04-20 14:21:26', 5);
INSERT INTO `question_choice` VALUES ('0855d4316e48415a9e', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '22735980751b498f86', '类库这种机制是级别的信息共享。', '同一类', '不同类', '同一应用', '不同应用', 'D', '暂无解析', '2021-04-20 14:21:59', 5);
INSERT INTO `question_choice` VALUES ('00f7fa0c21394182af', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '4c347b712bd94d1aba', '在屏蔽硬件错误的冗错技术中，冗余附加技术有( )', '三模冗余', '信息冗余', '冗余备份程序的存储及调用', '关键程序和数据的冗余存储和调用', 'D', '暂无解析', '2021-04-20 14:22:33', 4);
INSERT INTO `question_choice` VALUES ('deaad1de679c4f8a96', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '4c347b712bd94d1aba', '软件按照设计的要求，在规定时间和条件下达到不出故障，持续运行的要求的质量特性称为 ( )', '可用性', '可靠性', '正确性', '完整性', 'B', '暂无解析', '2021-04-20 14:23:07', 5);
INSERT INTO `question_choice` VALUES ('aa4460c90f35420e81', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'feb5c6d4da6b423a8d', '下列文档与维护人员有关的有( )', '软件需求说明书', '项目开发计划', '概要设计说明书', '操作手册', 'C', '暂无解析', '2021-04-20 14:23:38', 4);
INSERT INTO `question_choice` VALUES ('a0ff520c1998460aa5', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', 'f660a45ac49d4eb488,7a12af41132e464bb9', '采用图表示软件项目进度安排，下列说法中正确的是( )', '能够反映多个任务之间的复杂关系', '能够直观表示任务之间相互依赖制约关系', '能够表示子任务之间的并行和串行关系', '能够表示子任务之间的并行和串行关系', 'D', '暂无解析', '2021-04-20 14:24:33', 4);
INSERT INTO `question_choice` VALUES ('6c73180cb2e9424b98', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '7b2063f528b847e396', '下列模型属于成本估算方法的有', 'COCOMO模型', 'McCall 模型\n', 'McCabe度量法', '时间估算法', 'A', '暂无解析', '2021-04-20 14:25:04', 3);
INSERT INTO `question_choice` VALUES ('7e70f747fbc54b0d9e', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92,f89811e51123439795', '有语句String s=”hello world”; ，以下操作哪个是不合法的？（     ）', 'int i=s.length();', 's>>>=3;', 'String ts=s.trim();', 'String t=s+”!”;', 'B', '暂无解析', '2021-04-21 14:26:24', 5);
INSERT INTO `question_choice` VALUES ('1cf27e01e9124e6089', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92', '下列关于Java语言的特点，描述错误的是（    ）', 'Java是跨平台的编程语言', 'Java支持分布式计算', 'Java是面向过程的编程语言', 'Java支持多线程', 'C', '暂无解析', '2021-04-21 14:27:17', 5);
INSERT INTO `question_choice` VALUES ('3d2ab496471342869a', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'c94c1cf2aceb47d38c', '下述概念中不属于面向对象方法的是（    ）', '对象、消息', '继承、多态', '类、封装', '过程调用', 'D', '暂无解析', '2021-04-21 14:27:58', 4);
INSERT INTO `question_choice` VALUES ('4e30700b51a04419bf', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92,cd82e1319c0b487b83', '结构化程序设计所规定的三种基本控制结构是 （    ）', '输入、处理、输出', '树形、网形、环形 ', '顺序、选择、循环 ', '主程序、子程序、函数  ', 'D', '暂无解析', '2021-04-21 14:28:48', 7);
INSERT INTO `question_choice` VALUES ('253dbc0b469e4c3baa', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '06f9a0da902e40b0bc', '下列关于构造方法的叙述中，错误的是（    ）', 'Java语言规定构造方法名与类名必须相同', 'Java语言规定构造方法没有返回值，但不用void声明', 'Java语言规定构造方法不可以重载', 'Java语言规定构造方法只能通过new自动调用', 'C', '暂无解析', '2021-04-21 14:29:30', 4);
INSERT INTO `question_choice` VALUES ('d3596bd0560744a7b9', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f7a619f299e5490c92,4fc83f3b0a1d4c7f91', '下列哪个类的声明是正确的？（    ）', 'abstract final class HI{}', 'abstract private move(){}', 'protected private number;', 'public abstract class Car{}', 'D', '暂无解析', '2021-04-21 14:30:22', 5);
INSERT INTO `question_choice` VALUES ('d1559798af784d8188', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'd02bac192e0d4129a7', '关于被私有访问控制符private修饰的成员变量，以下说法正确的是（  ） ', '可以被三种类所引用：该类自身、与它在同一个包中的其他类、在其他包中的该类的子类', '可以被两种类访问和引用：该类本身、该类的所有子类', '只能被该类自身所访问和修改', '只能被同一个包中的类访问', 'C', '暂无解析', '2021-04-21 14:31:25', 4);
INSERT INTO `question_choice` VALUES ('0d75ac87b6db43f494', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '4fc83f3b0a1d4c7f91', '下列关于for循环和while循环的说法中哪个是正确的？（   ）', 'while循环能实现的操作，for循环也都能实现', 'while循环判断条件一般是程序结果，for循环判断条件一般是非程序结果', '两种循环任何时候都可替换', '两种循环结构中都必须有循环体，循环体不能为空', 'B', '暂无解析', '2021-04-21 14:32:21', 4);
INSERT INTO `question_choice` VALUES ('3e55c55c5113499c83', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '06f9a0da902e40b0bc,f89811e51123439795,4fc83f3b0a1d4c7f91', '阅读以下代码：  \nimport java.io.*;  \nimport java.util.*;  \npublic class foo{  \npublic static void main (String[] args){  \nString s;  \nSystem.out.println(\"s=\" + s);  }  }  \n输出结果应该是：（    ）\n', '代码得到编译，并输出“s=”', '代码得到编译，并输出“s=null”', '由于String s没有初始化，代码不能编译通过', '代码得到编译，但捕获到 NullPointException异常', 'C', '暂无解析', '2021-04-21 14:33:00', 4);
INSERT INTO `question_choice` VALUES ('df70fcde7ed04c4fa4', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'cd82e1319c0b487b83', ' 编译运行以下程序后，关于输出结果的说明正确的是 （    ） \npublic  class   Conditional{  \n              public  static  void  main(String  args[ ]){  \n                     int  x=4;  \n                     System.out.println(“value  is  “+ ((x>4) ? 99.9:9)); \n     } \n }\n', '输出结果为：value  is  99.9', '输出结果为：value  is  9 ', '输出结果为：value  is  9.0', '编译错误  ', 'C', '暂无解析', '2021-04-21 14:34:21', 6);
INSERT INTO `question_choice` VALUES ('b2404f5372cd419fb4', 'cefe3f09e3a7446683', 'fc5a87c696e64fca89', '05ad6e1c-b8de-4', '962d9977178746f5b0', '下面哪一个操作符的优先级最高？  （    ）', '&&', '||', '!', '( )', 'D', '暂无解析', '2021-04-21 14:35:31', 7);
INSERT INTO `question_choice` VALUES ('ba3d8f948f5c413f89', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f89811e51123439795', '下列方法头中哪一个不与其他方法形成重载(overload)关系?（   ）  ', 'void mmm()', 'void mmm(int i)', 'void mmm(String s)', 'int mm()', 'D', '暂无解析', '2021-04-21 14:36:14', 8);
INSERT INTO `question_choice` VALUES ('da688e78d48d48a08a', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '4fc83f3b0a1d4c7f91', '编译Java程序的命令是： （    ） ', 'appletviewer', 'javac', 'java', 'javadoc', 'B', '暂无解析', '2021-04-21 14:36:59', 5);
INSERT INTO `question_choice` VALUES ('30584cbf5c9c4fcca4', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '06f9a0da902e40b0bc,0f19101e2a4942a593', '编译Java源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(   )。', 'byte', 'class', 'html', 'exe', 'B', '暂无解析', '2021-04-21 14:37:41', 8);
INSERT INTO `question_choice` VALUES ('63aa34fe0a8f4d54a8', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'c86e153096114602b9', '执行语句int i = 1, j = ++i; 后i与j的值分别为（  ）。', '1与1', '2与1', '1与2', '2与2', 'D', '暂无解析', '2021-04-21 14:38:51', 4);
INSERT INTO `question_choice` VALUES ('86c1d67e7d9b46a295', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '8bfb561070154e6284', 'main方法是Java应用程序执行的入口点，关于main方法的方法头以下哪项是合法的？（    ）', 'public  static  void  main（）', 'public  static  void   main（ String[]  args ）', 'public  static int  main（String  [] arg ）', 'public  void  main（String  arg[] ）', 'B', '暂无解析', '2021-04-21 14:39:33', 8);
INSERT INTO `question_choice` VALUES ('4170afdcbc1345b991', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'd02bac192e0d4129a7', '下列哪个选项不是Java语言的特点？（     ）', '面向对象', '高安全性', '平台无关', '面向过程', 'D', '暂无解析', '2021-04-21 14:40:25', 7);
INSERT INTO `question_choice` VALUES ('49fa59e5777749ac8b', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'c94c1cf2aceb47d38c', '下面的选项中，哪一项不属于“汽车类”的行为（    ）。 ', '启动', '刹车', '减速', '速度', 'D', '暂无解析', '2021-04-21 14:41:14', 7);
INSERT INTO `question_choice` VALUES ('e939fbfc19cf4f2695', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '4fc83f3b0a1d4c7f91,c86e153096114602b9', '有如下程序段:  \n       int a = b = 5;  \n       String s1 = \"祝你今天考出好成绩！\";  \n       String s2 = s1; \n \n则表达式a == b与s2 == s1的结果分别是：（     ）。\n', 'true与true', 'false与true  ', 'true与false', 'false与false', 'A', '暂无解析', '2021-04-21 14:42:12', 3);
INSERT INTO `question_choice` VALUES ('36ffae2e08d44f62a5', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'cd82e1319c0b487b83,8bfb561070154e6284,c86e153096114602b9', '在Java中用什么关键字修饰的方法可以直接通过类名来调用？（     ）', 'static', 'final', 'private', 'void', 'A', '暂无解析', '2021-04-21 14:42:50', 7);
INSERT INTO `question_choice` VALUES ('bef91fa392f14b6c8b', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'f89811e51123439795', '若在某一个类定义中定义有如下的方法：abstract void performDial( );该方法属于（     ）', '接口方法', '最终方法', '抽象方法', '空方法 ', 'C', '暂无解析', '2021-04-21 14:43:26', 4);
INSERT INTO `question_choice` VALUES ('638f6fe8f3544f1bbc', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', 'd02bac192e0d4129a7', '有如下程序段: int total = 0; \nfor ( int i = 0; i \n  if ( i == 2) break;                              total += i; } \n则执行完该程序段后total的值为：（    ）。\n', '0', '1', '3', '6', 'A', '暂无解析', '2021-04-21 14:44:03', 7);
INSERT INTO `question_choice` VALUES ('7f6f591f7e1148eeb6', '86913a596db841dd96', '820c9f24a318469e9a', '05ad6e1c-b8de-4', '71abb7c01311487c9c', '下面声明数组的写法错误（    ）', 'int  a[ ];', 'int[ ]  a;', ' int[3][ ]  a; ', ' int[ ][3] a; ', 'D', '暂无解析', '2021-04-21 14:46:30', 7);
INSERT INTO `question_choice` VALUES ('e5979c36dca34d67b6', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '0833051f29364a2281', '对查询结果进行排序的关键字是 ( )', 'group by', 'select', 'order by', 'insert into ', 'C', '暂无解析', '2021-04-25 13:35:46', 4);
INSERT INTO `question_choice` VALUES ('d27474c10bdc40f089', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '1b6995881eef477f99', ' 对分组中的数据进行过滤的关键字是 (  )', 'order', 'where', 'having', 'join', 'C', '暂无解析', '2021-04-25 13:36:11', 4);
INSERT INTO `question_choice` VALUES ('31db164dd5bc4d3394', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'd1d34bc68115498da3', '多表左连接查询使用的语句是 (   ) ', 'select , from , inner join , on..', 'select , .from , .left join .....on..', 'select , .from , .right join , ..on , .. ', '.select ,, from , ..full join ,,, .', 'B', '暂无解析', '2021-04-25 13:37:06', 5);
INSERT INTO `question_choice` VALUES ('d18e63091b5f48f1aa', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'd732a0710e214be396', 'mysql 对查询结果进行升序排序的关键字是 (   )', 'asc', 'desc', 'limit', 'order', 'A', '暂无解析', '2021-04-25 13:37:37', 5);
INSERT INTO `question_choice` VALUES ('b97c2e2c6b884f3d91', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'd27c033c88af4a2ba8', '以下关于Ｍ ySQL 的说法中错误的是： （  ）', ' MySQL 是一种关系型数据库管理系统', 'MySQL 软件是一种开放源码软件', 'MySQL 服务器工作在客户端 /服务器模式下', ' MySQL 不能运行于 windows 系统下', 'D', '暂无解析', '2021-04-25 13:38:12', 5);
INSERT INTO `question_choice` VALUES ('70bc38b75dc14a14b7', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '4b334fb8009a418f96', '(   ) 是 MySQL 服务器', 'MySQL', 'MySQLD', 'MySQLD', 'MySQLS', 'B', '暂无解析', '2021-04-25 13:38:42', 7);
INSERT INTO `question_choice` VALUES ('d3161313d5a542ac89', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '5e19cca529884d03a1', '转义字符“ \\n ”表示：（   ）', 'NUL', '退格', '换行', '制表符', 'C', '暂无解析', '2021-04-25 13:39:16', 7);
INSERT INTO `question_choice` VALUES ('b19caa2fbbed44e59f', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '909207e6a6a541c59c', '创建表时，不允许某列为空可以使用： （   ）', 'NOT NULL ', 'NO NULL ', ' NOT BLANK', 'NO BLANK ', 'A', '暂无解析', '2021-04-25 13:40:01', 8);
INSERT INTO `question_choice` VALUES ('b6584fe529db4245b4', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'b159afd91a7a48df83', '使用 ALTER TABLE修改表时，如果要修改表的名称，可以使用哪一子句？（ ）\n', 'CHANGE NAME', 'SET NAME', ' NOT BLANK', 'NEW NAME ', 'A', '暂无解析', '2021-04-25 13:40:43', 8);
INSERT INTO `question_choice` VALUES ('572be5decb9e4f20a2', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '0833051f29364a2281,5ab565d13b914df6bc', ' 要想对表中记录分组查询，可以使用哪一子句？ （   ）', 'GROUP BY ', 'AS GROUP ', 'GROUP AS ', 'TO GROUP ', 'A', '暂无解析', '2021-04-25 13:41:21', 8);
INSERT INTO `question_choice` VALUES ('49344b04c8c5403080', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'b67ab4d35daf489187', '索引可以提高哪一操作的效率？ （   ）', 'INSERT', 'UPDATE', 'DELETE', 'SELECT', 'B', '暂无解析', '2021-04-25 13:41:57', 8);
INSERT INTO `question_choice` VALUES ('9f83e7cb9ba2437bb4', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '5d592f2257014e12ae', ' ______命令可以查看视图的创建语句 （ c ）', 'SHOW VIEW', 'SELECT VIEW ', 'SHOW CREATE VIEW', 'DISPLAY VIEW', 'C', '暂无解析', '2021-04-25 13:42:30', 9);
INSERT INTO `question_choice` VALUES ('5abd6e7fcc3f4acab1', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', 'b67ab4d35daf489187', '收到用户的访问请示后， MySQL 最先在（  ）表中检查用户的权限。\n', 'HOST', 'USER', 'DB', 'PRIV', 'B', '暂无解析', '2021-04-25 13:45:53', 5);
INSERT INTO `question_choice` VALUES ('536d5b11ea67492993', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '5d592f2257014e12ae', '要想移除账户，应使用（   ）语句。\n', 'DELETE USER ', 'DROP USER', 'DELETE PRIV', 'DROP PRIV ', 'B', '暂无解析', '2021-04-25 13:46:41', 6);
INSERT INTO `question_choice` VALUES ('dbde044a18e340ec86', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '26b717514e914324b1', '建表语句中的 not null ，该代码表示的含义是：（   ）\n', '允许空格', '非空约束', '不允许写入数据', '不允许读取数据', 'B', '暂无解析', '2021-04-25 13:47:23', 6);
INSERT INTO `question_choice` VALUES ('6d2bccb8ecb74ac3ab', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '24977332027c41baa8', 'select * from student 该代码中的 * 号，表示的正确含义是： （     ）', '普通的字符 *号', '错误信息', '所有的字段名', '模糊查询', 'C', '暂无解析', '2021-04-25 13:47:54', 7);
INSERT INTO `question_choice` VALUES ('802c742efe274b5b90', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '24977332027c41baa8,01d65ed7e78d46cc93', '向数据表添加数据，哪些是添加的关键字？ （  \n ）', 'insert', 'update', 'delete', 'selec', 'A', '暂无解析', '2021-04-25 13:51:22', 7);
INSERT INTO `question_choice` VALUES ('c207b61da35340f18d', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '6b8767fc19d24a12b6', '函数 max( ) 表明这是一个什么函数？ （  ）', '求总值函数', '求最小值函数', '求平均值函数', '求最大值函数', 'D', '暂无解析', '2021-04-25 13:51:56', 7);
INSERT INTO `question_choice` VALUES ('9875ce74a4f64993a5', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', 'ce02d32d25e04095b6', '修改表记录的语句关键字是： （   ）\n', 'delete ', 'update', 'insert', 'select', 'B', '暂无解析', '2021-04-25 13:52:38', 7);
INSERT INTO `question_choice` VALUES ('5a6037fa2d58476c8a', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '75a0ff8357244f4da5', '在 SQL 语言中，子查询是（ d ）。', '选取单表中字段子集的查询语句', '选取多表中字段子集的查询语句', '返回单表中数据子集的查询语言', '嵌入到另一个查询语句之中的查询语句', 'D', '暂无解析', '2021-04-25 13:53:18', 7);
INSERT INTO `question_choice` VALUES ('650d167046b54832a9', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '735464e2ea9e4a6093', '向数据表中插入一条记录用以下哪一项 (   ) ', 'CREATE ', 'INSERT', 'SAVE ', 'UPDATE ', 'B', '暂无解析', '2021-04-25 13:54:14', 7);
INSERT INTO `question_choice` VALUES ('cb1702d3c70b47ff8f', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '39e1ef3cb0334ecfa7', '在 select 语句的 where 子句中，使用正则表达式过滤数据的关键字是 (   ) ', 'like ', 'against ', 'match ', 'regexp ', 'A', '暂无解析', '2021-04-25 13:55:17', 7);
INSERT INTO `question_choice` VALUES ('ba70a9f65ebc48d8b7', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '143368eb5aba4be7b4', 'SQL 语言中，删除一个视图的命令是 (   )', 'REMOVE ', 'CLEAR ', 'DELETE ', 'DROP ', 'D', '暂无解析', '2021-04-25 13:55:47', 7);
INSERT INTO `question_choice` VALUES ('8b9e42943cbe4852aa', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '07f278d6cf0a40f2b9', '修改数据库表结构用以下哪一项 (   )', 'UPDATE ', 'CREATE ', 'UPDATED ', 'ALTER ', 'D', '暂无解析', '2021-04-25 13:56:18', 7);
INSERT INTO `question_choice` VALUES ('702297a8d43f4920b4', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', 'b6a54f3d932b42cfae', '下列 (   )不属于连接种类', '左外连接', '内连接', '中间连接', '右外连接', 'C', '暂无解析', '2021-04-25 13:56:50', 8);
INSERT INTO `question_choice` VALUES ('41c27d1db3ab4812b0', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '120363ccab7b45a1ba', '创建数据库使用以下哪项 (   ) ', 'create mytest', 'create table mytest ', 'database mytest ', 'create database mytest ', 'D', '暂无解析', '2021-04-25 13:57:48', 8);
INSERT INTO `question_choice` VALUES ('3c90bc7373814a7ea4', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '26b717514e914324b1', '若要在基本表 S中增加一列 CN （课程名），可用（   ）', 'add table s alter cn char （８）', 'alter table s add cn char （８）', 'add table s cn char （８）', 'alter table s add cn', 'B', '暂无解析', '2021-04-25 13:58:52', 9);
INSERT INTO `question_choice` VALUES ('c308e918e2324a9f85', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '24977332027c41baa8', '以下删除记录正确的 (  ) ', 'delete from emp where name=\'dony\'; ', 'Delete * from emp where name=\'dony\'; ', 'Drop from emp where name=\'dony\'; ', 'Drop * from emp where name=\'dony\'; ) ', 'A', '暂无解析', '2021-04-25 13:59:41', 10);
INSERT INTO `question_choice` VALUES ('797aa2f1eab940e49c', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '24038b48182349fa8d', '01d65ed7e78d46cc93', '删 除 经 销 商 1018 的数 据 记 录的 代 码 为 (   ) from distributors where distri_num=1018 ', 'drop table ', 'delete * ', 'drop column ', 'delete', 'D', '暂无解析', '2021-04-25 14:00:25', 10);
INSERT INTO `question_choice` VALUES ('1fb4a2fc9d4c417580', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '0833051f29364a2281', 'SQLServer2005是哪个公司开发出来的？\n', 'SyBase', 'Sun', 'AstonTate', 'Microsoft', 'B', '暂无解析', '2021-04-27 10:18:50', 1);
INSERT INTO `question_choice` VALUES ('213a0cc1556c41bb91', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '1b6995881eef477f99', '按照姓名降序排列 (   )\n', 'ORDER BY DESC NAME ', 'ORDER BY NAME DESC', 'ORDER BY NAME ASC ', 'ORDER BY ASC NAME ', 'B', '暂无解析', '2021-04-27 10:19:44', 2);
INSERT INTO `question_choice` VALUES ('5845200401af402b82', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'd1d34bc68115498da3', '在 SELECT语句中，使用关键字 (   )可以把重复行屏蔽', 'TOP ', 'ALL', 'UNION', 'DISTINCT', 'D', '暂无解析', '2021-04-27 10:20:20', 2);
INSERT INTO `question_choice` VALUES ('ef5ec4869d04481394', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'd27c033c88af4a2ba8', '用来插入数据的命令是 (   )，用于更新的命令是（  ) ', 'INSERT，UPDATE', 'CREATE，INSERT INTO', 'DELETE，UPDATE ', 'UPDATE,INSERT ', 'A', '暂无解析', '2021-04-27 10:21:39', 2);
INSERT INTO `question_choice` VALUES ('9f48f472168f44d384', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '4b334fb8009a418f96', '命令 SELECT COUNT(SAL) FROM EMP GROUP BY DEPTNO; 的意思是\n( )', '求每个部门中的工资', '求每个部门中工资的大小', '求每个部门中工资的综合', '求每个部门中工资的个数\n', 'A', '暂无解析', '2021-04-27 10:23:03', 3);
INSERT INTO `question_choice` VALUES ('748136d353c8426ebe', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '5e19cca529884d03a1', '以下表达降序排序的是 (   ) ', 'ASC ', 'ESC ', 'DESC ', 'DSC ', 'C', '暂无解析', '2021-04-27 10:23:46', 5);
INSERT INTO `question_choice` VALUES ('6d3c7cb9cd8847f68a', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '909207e6a6a541c59c', '从 GROUP BY 分组的结果集中再次用条件表达式进行筛选的子句是 (  ) ', 'FROM', 'ORDER BY ', 'HAVING ', 'WHERE ', 'C', '暂无解析', '2021-04-27 10:24:22', 5);
INSERT INTO `question_choice` VALUES ('22457f8b81ce40bead', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'b159afd91a7a48df83', '为数据表创建索引的目的是 (   ) ', '提高查询的检索性能', '归类', '创建唯一索引', '创建主键', 'A', '暂无解析', '2021-04-27 10:25:27', 6);
INSERT INTO `question_choice` VALUES ('a32a975b90954c98a5', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '01d65ed7e78d46cc93', '在 MySQL 中，建立数据库用 (   )', 'CREATE TABLE 命令', 'CREATE TRIGGER命令\n', 'CREATE INDEX 命令', 'CREATE DATABASE 命令', 'D', '暂无解析', '2021-04-27 10:28:09', 5);
INSERT INTO `question_choice` VALUES ('50dfab0856b64f9f94', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '6b8767fc19d24a12b6', 'MySQL 中，预设的、拥有最高权限超级用户的用户名为 (  )', 'test ', 'Administrator', 'DA ', 'root', 'D', '暂无解析', '2021-04-27 10:28:36', 7);
INSERT INTO `question_choice` VALUES ('dedf0f131aa14a84b6', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '5ab565d13b914df6bc', '以下聚合函数求数据总与得就是（      )', 'MAX ', 'SUM', 'count', 'AVG', 'B', '暂无解析', '2021-04-27 10:46:26', 5);
INSERT INTO `question_choice` VALUES ('45dd98082a7f4598b6', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', 'b67ab4d35daf489187', '可以用(     ）来声明游标', 'CREAＴＥ ＣURSOＲ', 'ALTER ＣURSOR ', 'SET CＵRSＯR', 'DECLARE CURSOR', 'D', '暂无解析', '2021-04-27 10:47:13', 5);
INSERT INTO `question_choice` VALUES ('8acd9a554f774e8492', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '5d592f2257014e12ae', 'ＳEＬECＴ语句得完整语法较复杂,但至少包括得部分就是（      )', '仅SELEＣT', 'SEＬＥCT，FRＯM ', 'ＳEＬECＴ，GＲOUP ', 'SELEＣT，INTO', 'B', '暂无解析', '2021-04-27 10:47:49', 5);
INSERT INTO `question_choice` VALUES ('9e61ff42c7b84660a1', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '26b717514e914324b1,01d65ed7e78d46cc93', 'SQL语句中得条件用以下哪一项来表达（      ）', 'THEN ', 'WＨILE', 'ＷHEＲE', 'IＦ', 'C', '暂无解析', '2021-04-27 10:48:18', 5);
INSERT INTO `question_choice` VALUES ('3ebac29808a14cc4b5', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '24977332027c41baa8,6b8767fc19d24a12b6', '使用CRＥATE TABLE语句得（      ）子句,在创建基本表时可以启用全文本搜索 ', 'FULLTEXＴ', 'EＮGIＮＥ', 'FROM', 'WHRER', 'A', '暂无解析', '2021-04-27 10:51:29', 5);
INSERT INTO `question_choice` VALUES ('a633e9c52b904776b0', 'ec1a249ecad74cf987', '7ab7ed0e8d1f49f08a', '05ad6e1c-b8de-4', '01d65ed7e78d46cc93,ce02d32d25e04095b6', '以下能够删除一列得就是（      ）', 'alｔｅｒ ｔableemp rｅmove addcｏlｕｍn', 'alｔeｒ tａｂle empｄroｐ colｕmｎ aｄdｃoluｍnﻩ', 'alｔer tａblｅ emp deleｔe coｌuｍn addcoｌumn', 'ａｌｔeｒ tableｅmｐ ｄｅlｅteａｄdcolumn', 'B', '暂无解析', '2021-04-27 10:52:19', 5);

-- ----------------------------
-- Table structure for test_paper
-- ----------------------------
DROP TABLE IF EXISTS `test_paper`;
CREATE TABLE `test_paper`  (
  `tp_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '试卷id',
  `tp_name` varchar(25) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '试卷名字',
  `tp_create_by` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人',
  `tp_course_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '所属的课程id',
  `tp_que_ids` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '试题的id列表',
  `tp_knowledge_ids` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '知识点列表',
  `tp_describe` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '试卷描述',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`tp_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '试卷' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of test_paper
-- ----------------------------
INSERT INTO `test_paper` VALUES ('3cc4e42bd9fa422b9b', '撒大声地', '05ad6e1c-b8de-4', '86913a596db841dd96', '8c19362c760c4e64b4,5ed2de72550e49e198,25cc256c7618426186,8c19362c760c4e64b4,5ed2de72550e49e198,4a0dcefa229e4eae99,fa17d9f1b3954938b4,732b750a0ec04a6291,8a49fc4ed861452e88,8c33090488bc425d97', '[undefined4fc83f3b0a1d4c7f91, f89811e51123439795, 8bfb561070154e6284, fdd6466447ab48b994, c94c1cf2aceb47d38c, e4dc8c2bf8cf4245b3, 0f19101e2a4942a593, 4acbb627c9ce41b294]', '213', '2021-04-16 11:21:49');
INSERT INTO `test_paper` VALUES ('af78c7ffc22a471093', 'java基础自动生成', 'ef3297d46c7d47eaa9', '86913a596db841dd96', '[e115cc1302fe45e889, cf523b7e4e594af19a, b9767da32a1045098d, 50c12d53b7a043059b, 4a0dcefa229e4eae99, 086210a8f35f4ab6bf, 732b750a0ec04a6291, 4d76bfa31ed84f9f86, 4e09c891c53149fb92, e3074e34209145e491, 74fdf9d1659a4fe1b9, 275cd2a90eb7450085, 33307754fd03486491, 672c28561c8541c0b3, 888c76288c28405e83, eefb3a860b2d4cb88f, 5ed2de72550e49e198, 410190c5ea194184b9, e9be79c73f26484aa3, 25cc256c7618426186, 86588b1f582c457791, 8c19362c760c4e64b4, 9161cb4dde924e57bf, fa17d9f1b3954938b4, 4074d472a40e4c489b, 2e55c0267312444392, a5a23a94ef5e43fb98, bcfbde55ae0f40178c, 8c33090488bc425d97, 587d0783e8cc4a829b, 3ce5399e2dc848e0ad, 79664153ac534d3999, d42b8604205d4c32b5, 13cd6929a9524c549f, 8a49fc4ed861452e88, baf1de2133f44408b7, c1c926d4371a43c0ab, 9abdaefa99ec4bd3a7, 9d25288004bf443890, cbae13be170a45a08d, 749fc86ae3524f808e, 094f267948954d728a, 417177bc91db48e4a5, dfd54258fcc045e69c, da9001ea14b64a6380, f0685942f8ec4322b3, 37cb0aa01e324ba483, d0b6fb43b9944366a5, 4de4e0cc5583445491, 94c8db713b794275b7, 1ccb6e67923f4699b1, b8677b46d6f8499299, a2c92d2e19744c5a92, d6c60a561f704e6abf, 3a8a34afb9924aa1ac, 0a39fee92e82436f82, 1365782fcb3440518f, 2c0b744a886f4f02b2, 21210ce228fd41f99d, e7217b6a4c0b45dfa8, 42153a6e63d04aaf9c, 3634419e69724be49c]', '[595481fdddaf4382a2, cd82e1319c0b487b83, 71abb7c01311487c9c, d02bac192e0d4129a7, d70f5307646540ad87, 4fc83f3b0a1d4c7f91, 390942390aa942729b, bb354a7cf5d64c03a1, fdd6466447ab48b994, e4dc8c2bf8cf4245b3, f7a619f299e5490c92, 06f9a0da902e40b0bc, 4e56437d15874ff495, 23a1ec2c973f4b12be, f89811e51123439795, 8bfb561070154e6284, 97b102a325b54bfb9f, c94c1cf2aceb47d38c, c86e153096114602b9, 4acbb627c9ce41b294, 0f19101e2a4942a593]', 'java基础自动生成', '2021-04-19 14:50:07');
INSERT INTO `test_paper` VALUES ('f62af051e9d04fc7a6', '软件工程试卷', '05ad6e1c-b8de-4', 'cefe3f09e3a7446683', '[4eba998fec9644f3b3, 2afc90fae50b4d71ad, e5b95a95f0bf42fbad, 6c73180cb2e9424b98, 88283c4bee26424384, 6756415a683048ee89, e3c94c96cd134385bc, 9ceee8a7eb6f41efbe, 5ccbb18038a442999f, 1147850d050845068c, 8aedcf310a2e4b9198, f9be7341569245658d, 05686db52cf24e868c, 4b72044e578e403189, a0ff520c1998460aa5, 6cf9b06747534f96ac, 4300716f8f9742fe98, 58ed25ffcd6d4c3682, d48669b4e6f942738b, 49026aeebab243b2a9, e0a71b9dc5c2406881, e319007d491c4b54b9, deaad1de679c4f8a96, 0855d4316e48415a9e, e119a66588284908bb, b31e447ffdb2495989, 7fdce79e556d4c889f, 076050b4a5ee4912a5, e916ee392c1c429e9e, df1c8b08ecd043c8ab, 5d64025c7e2e483dbf, 22078e01772e425db7, d042f94e56f941038c, b2404f5372cd419fb4, 80d8b8864d5d449780, b23a296212e2429085, 36d5a3c985a241b7b5, 61054efde2e747fdb7, 0e578ec5d3524297a2, bb00b19eef454ad28c, 6caf9ca46d644d5980, cf5c165988bc4c0a99, 6c12d1ec9b3144008f, 9e3d52b7cbb844c0b2, 73000c243e22463396, 603c0ae346fc417891, 273791e457a04f539a, 6d4c783e396e427e87, a9cc2a80e45f4d26b2, 44c464b5c84a47d2b9, e26c256914d34aa482, deb9ea9f1f8749b6a4, f3691b399d7248838c, 8842f56d4b9c4cf5b9, 656403404c97427eae, f707c22e707240799a, 3e781d3edb7c4260a1, 03fade8db21340d580, 3dfddb54c4e24af3b0, 969a40b2d14a4ec1a7, eb89be230dfd4dbf98, b2a4121a0f054d0aac]', '[a56a38238cef47758c, f0137215abd84028aa, a5a904c02997438ba0, 70c91de7e20a49808f, 7b2063f528b847e396, 3ade8921796345e69e, ecac24895971451a9c, ec5cd4ac7a474595a3, 95595ad72eb34a5da8, 4a011e6fcb354e9799, 53d74b274ef24779a3, 914a7617058343f499, 49f784fb241f47608d, 7a12af41132e464bb9, f660a45ac49d4eb488, 698e64ede5b545e6be, 22735980751b498f86, e4621a889faf4a63a1, 962d9977178746f5b0, 4389ed8f3bc7415c92, 0433440b85014c03bd, 9076665dd3f2466d9f, 4c347b712bd94d1aba, feb5c6d4da6b423a8d, 80d9416adefa40a6b4, 6b7730085346422c8a, b187c32177214bf5af, c6774d1077624d21a4, 9e56248707a9458380, 07e2947112bf44b9ad]', '该试卷是在   2021-4-25 11:04:44  [自动]  生成的试卷', '2021-04-25 11:04:44');
INSERT INTO `test_paper` VALUES ('2719a6ea52cc44219d', '软件工程手动生成', '05ad6e1c-b8de-4', 'cefe3f09e3a7446683', '6c73180cb2e9424b98,a0ff520c1998460aa5,aa4460c90f35420e81,deaad1de679c4f8a96,0855d4316e48415a9e,6756415a683048ee89', '[undefined7b2063f528b847e396, f660a45ac49d4eb488, 7a12af41132e464bb9, feb5c6d4da6b423a8d, 4c347b712bd94d1aba, 22735980751b498f86, ecac24895971451a9c]', '改试卷在2021-4-20 14:54:20[手动]添加的试卷', '2021-04-20 14:54:20');
INSERT INTO `test_paper` VALUES ('8e7fd2d34a1944a586', 'MySQL-手工试卷', '05ad6e1c-b8de-4', 'ec1a249ecad74cf987', 'a633e9c52b904776b0,3ebac29808a14cc4b5,9e61ff42c7b84660a1,8acd9a554f774e8492,45dd98082a7f4598b6,dedf0f131aa14a84b6,50dfab0856b64f9f94', '[undefined01d65ed7e78d46cc93, ce02d32d25e04095b6, 24977332027c41baa8, 6b8767fc19d24a12b6, 26b717514e914324b1, 01d65ed7e78d46cc93, 5d592f2257014e12ae, b67ab4d35daf489187, 5ab565d13b914df6bc]', '该试卷是在   2021-5-2 12:35:00  [手动]  生成的试卷', '2021-05-02 12:35:00');
INSERT INTO `test_paper` VALUES ('4cd7dcd845c143cba0', '34', '05ad6e1c-b8de-4', 'ec1a249ecad74cf987', '[797aa2f1eab940e49c, 8acd9a554f774e8492, 702297a8d43f4920b4, 49344b04c8c5403080, d18e63091b5f48f1aa, 5845200401af402b82, d3161313d5a542ac89, 536d5b11ea67492993, 3ebac29808a14cc4b5, a633e9c52b904776b0, 3c90bc7373814a7ea4, a32a975b90954c98a5, 802c742efe274b5b90, 9e61ff42c7b84660a1, 9875ce74a4f64993a5, 9f48f472168f44d384, 22457f8b81ce40bead, 50dfab0856b64f9f94, 45dd98082a7f4598b6, 31db164dd5bc4d3394, ba70a9f65ebc48d8b7, 1fb4a2fc9d4c417580, b6584fe529db4245b4, cb1702d3c70b47ff8f, b19caa2fbbed44e59f, dbde044a18e340ec86, 6d2bccb8ecb74ac3ab, 5abd6e7fcc3f4acab1, 70bc38b75dc14a14b7, 748136d353c8426ebe, e5979c36dca34d67b6, 8b9e42943cbe4852aa, 213a0cc1556c41bb91, 572be5decb9e4f20a2, 41c27d1db3ab4812b0, 6d3c7cb9cd8847f68a, 9f83e7cb9ba2437bb4, be194966a31d419bb8, 3b1b25195c2c496a89, cd1a78749c3c4582a0, 34e9585c9ab04c3b8a, 01ef917ec7f54c30a7, b11f4c8c2354450991, 5f78ee0581e541b19a, f5bdcca432594c1ca7, bdba6126821e4fde89, ea2ac7812135452fb4, fbd7ba4b9afc4ca985, 4bb11aaeea62422e91, 15a3f4b042514f60a2, 7311564246184a3d9e, 291b84290f7e49938b, e298271eae934e36b6, 1f6b015ed16c4168b8, 82d623339fe74ba99b, f82890f22d25434c9c, 741655dec4614e5dbf, a10a91b5c0ee4ed59f, d931a9a298eb40bab6, a3eb174bba36428db2, 78f9b7a65da648bdbb, 3b57cb28c770419981, a2ec92bcedd041f3a9, a1723b80876f4602aa, 76d431f2217a495bae, af4c896f125045068b, 2452ddfa37f543a59f, d5287bb19d144a01a6]', '[01d65ed7e78d46cc93, 5d592f2257014e12ae, b6a54f3d932b42cfae, b67ab4d35daf489187, d732a0710e214be396, d1d34bc68115498da3, 5e19cca529884d03a1, 24977332027c41baa8, 6b8767fc19d24a12b6, ce02d32d25e04095b6, 26b717514e914324b1, 4b334fb8009a418f96, b159afd91a7a48df83, 143368eb5aba4be7b4, 0833051f29364a2281, 39e1ef3cb0334ecfa7, 909207e6a6a541c59c, 07f278d6cf0a40f2b9, 1b6995881eef477f99, 5ab565d13b914df6bc, 120363ccab7b45a1ba, 93f7af376d2d453786, 76c78d3bedde41e097, b480fd778c6b40328f, 5bc3e8feba434a4fa3, caa0550e52a041839e, ee82ce5302454632a7, 63b103843adf4d2eb9, ef787fb168884e32b9, 46b7c1be53d64bcc80, d27c033c88af4a2ba8]', '该试卷是在   2021-5-10 9:31:49  [自动]  生成的试卷', '2021-05-10 09:31:49');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `user_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户id',
  `user_phone` varchar(12) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '手机号',
  `user_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户名',
  `password` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '密码',
  `email` varchar(25) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '邮箱',
  `is_admin` char(2) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '是否管理员Y -N',
  `sex` char(2) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '男1--女0',
  `photo` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户头像路径',
  `deleted` int(11) NULL DEFAULT NULL COMMENT '逻辑删除',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`user_id`) USING BTREE
) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('87e7a849-3085-4', '17776436603', '姚姚', '099fd40b95aecf10e924501bf9a62873', 'yaoyao@163.com', 'Y', '0', '/image/cbb900cd-2515-4.jpg', 1, '2021-02-13 12:25:05');
INSERT INTO `user` VALUES ('05ad6e1c-b8de-4', '17877184843', '超级管理员', '099fd40b95aecf10e924501bf9a62873', 'weimingqi@q.com', 'Y', '1', '/image/d6da5bb7-0b13-4.jpg', 1, '2021-02-13 12:25:06');
INSERT INTO `user` VALUES ('28c1921febad406cbf', '13677184843', '张三', '099fd40b95aecf10e924501bf9a62873', 'zhangsan@163.com', 'N', '1', '/image/0924c863-3788-4.jpg', 1, '2021-04-15 18:46:34');
INSERT INTO `user` VALUES ('ef3297d46c7d47eaa9', '17765321111', '李四', '099fd40b95aecf10e924501bf9a62873', 'lisi@163.com', 'N', '0', '/image/666ce7e5-8b9d-4.jpg', 1, '2021-04-15 18:47:38');
INSERT INTO `user` VALUES ('24038b48182349fa8d', '15662323232', '王大力', '099fd40b95aecf10e924501bf9a62873', 'wangdali@163.com', 'N', '1', '/image/f47c0ecd-8e47-4.jpg', 1, '2021-04-15 19:39:39');
INSERT INTO `user` VALUES ('e3f01c978d5f451792', '15555555555', '33333333333333', '1f781aa52b6ba14df3204709a6f126cc', NULL, 'N', '1', '/image/3365337c-a112-4.png', 1, '2021-05-10 22:43:35');

SET FOREIGN_KEY_CHECKS = 1;
